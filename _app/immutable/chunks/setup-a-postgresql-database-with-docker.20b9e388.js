import{S as Kt,i as Zt,s as zt,k as t,r,a as u,l as n,m as o,u as c,h as s,c as f,p as i,b as p,E as a,n as Ua}from"./index.fbbdd111.js";function Jt(Ot){let v,te,ie,ue,Os,Rs,qe,E,y,fe,Ds,Ne,_,Ts,de,xs,As,Me,b,w,ke,Is,Qe,S,P,he,Ls,We,g,O,me,Cs,Be,Q,Hs,ve,Gs,Ue,R,D,Ee,qs,je,ne,Ns,Fe,W,Ms,ye,Qs,$e,B,Rt=`<code class="language-yml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.3'</span></code>`,Ke,T,Ws,_e,Bs,Us,Ze,U,Dt=`<code class="language-yml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.3'</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  postgres<span class="token punctuation">-</span>db<span class="token punctuation">:</span></code>`,ze,d,js,j,Fs,$s,be,Ks,Zs,F,zs,Js,$,Vs,Je,K,Tt=`<code class="language-yml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.3'</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">postgres-db</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres<span class="token punctuation">:</span>latest</code>`,Ve,h,Xs,we,Ys,ea,Se,sa,aa,Xe,Z,xt=`<code class="language-yml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.3'</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">postgres-db</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres<span class="token punctuation">:</span>latest

    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token comment"># hosting-machine port:docker-container port</span>
      <span class="token punctuation">-</span> 5432<span class="token punctuation">:</span><span class="token number">5432</span></code>`,Ye,x,ta,Pe,na,oa,es,z,At=`<code class="language-yml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.3'</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">postgres-db</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres<span class="token punctuation">:</span>latest

    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token comment"># hosting-machine port:docker-container port</span>
      <span class="token punctuation">-</span> 5432<span class="token punctuation">:</span><span class="token number">5432</span>

    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token comment"># hosting-machine folder:docker-container folder</span>
      <span class="token punctuation">-</span> ./postgres<span class="token punctuation">-</span>db<span class="token punctuation">:</span>/var/lib/postgresql/data/</code>`,ss,k,la,ge,pa,ra,Oe,ca,ia,Re,ua,as,J,It=`<code class="language-yml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.3'</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">postgres-db</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres<span class="token punctuation">:</span>latest

    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token comment"># hosting-machine port:docker-container port</span>
      <span class="token punctuation">-</span> 5432<span class="token punctuation">:</span><span class="token number">5432</span>

    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token comment"># hosting-machine folder:docker-container folder</span>
      <span class="token punctuation">-</span> ./postgres<span class="token punctuation">-</span>db<span class="token punctuation">:</span>/var/lib/postgresql/data/

    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> POSTGRES_USER=amine
      <span class="token punctuation">-</span> POSTGRES_PASSWORD=4N45e2o1<span class="token important">*22$Euf1g279</span>
      <span class="token punctuation">-</span> POSTGRES_DB=db</code>`,ts,oe,De,fa,ns,A,da,Te,ka,ha,os,V,Lt=`<code class="language-yml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.3'</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">postgres-db</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres<span class="token punctuation">:</span>latest

    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token comment"># hosting-machine port:docker-container port</span>
      <span class="token punctuation">-</span> 5432<span class="token punctuation">:</span><span class="token number">5432</span>

    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token comment"># hosting-machine folder:docker-container folder</span>
      <span class="token punctuation">-</span> ./postgres<span class="token punctuation">-</span>db<span class="token punctuation">:</span>/var/lib/postgresql/data/

    <span class="token key atrule">env_file</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> .env</code>`,ls,X,Ct=`<code class="language-bash"><span class="token comment"># .env file</span>
<span class="token assign-left variable">POSTGRES_USER</span><span class="token operator">=</span>amine
<span class="token assign-left variable">POSTGRES_PASSWORD</span><span class="token operator">=</span>4N45e2o1*22<span class="token variable">$Euf1g279</span>
<span class="token assign-left variable">POSTGRES_DB</span><span class="token operator">=</span>db</code>`,ps,I,L,xe,ma,rs,C,va,Ae,Ea,ya,cs,le,Ie,_a,is,Y,Ht='<code class="language-bash">  <span class="token function">docker</span> compose up</code>',us,H,ba,Le,wa,Sa,fs,G,Pa,Ce,ga,Oa,ds,pe,He,Ra,ks,ee,Gt='<code class="language-bash">  <span class="token function">docker</span> compose down</code>',hs,q,N,Ge,Da,ms,M,Ta,se,xa,Aa,vs,re,Ia;return{c(){v=t("blockquote"),te=t("p"),ie=t("strong"),ue=t("em"),Os=r("DISCLAIMER:"),Rs=r(" This is not a Docker 101, I assume you already have some basic knowledge and expertise with docker and also have docker already installed."),qe=u(),E=t("h1"),y=t("a"),fe=t("span"),Ds=r("What is docker compose?"),Ne=u(),_=t("p"),Ts=r("Docker Compose is a tool for defining and running multi-container Docker applications, it allows you to create and start multiple services from a "),de=t("code"),xs=r("docker-compose.yml"),As=r(" configuration file."),Me=u(),b=t("h1"),w=t("a"),ke=t("span"),Is=r("Why using docker compose?"),Qe=u(),S=t("h2"),P=t("a"),he=t("span"),Ls=r("Lets get started with setting up a PostgreSQL database"),We=u(),g=t("h3"),O=t("a"),me=t("span"),Cs=r("Step 1:"),Be=u(),Q=t("p"),Hs=r("In the root of your project folder, create a new file and name it "),ve=t("code"),Gs=r("docker-compose.yml"),Ue=u(),R=t("h3"),D=t("a"),Ee=t("span"),qs=r("Step 2:"),je=u(),ne=t("p"),Ns=r("Letâ€™s open the file and start adding the configurations:"),Fe=u(),W=t("p"),Ms=r("1- Specify the docker compose version: I am going to use "),ye=t("code"),Qs=r('version: "3.3"'),$e=u(),B=t("pre"),Ke=u(),T=t("p"),Ws=r("2- Add the services (each service represent a container): in our case we are going to add one service, I am going to name it "),_e=t("code"),Bs=r("postgres-db"),Us=r(" you can name it what ever you want"),Ze=u(),U=t("pre"),ze=u(),d=t("p"),js=r("3- Find the image you want to use on "),j=t("a"),Fs=r("Docker Hub"),$s=r(": "),be=t("strong"),Ks=r("make sure to use the official images"),Zs=r(", I prefer to use "),F=t("a"),zs=r("postgres:latest"),Js=r(" which is alawys updated, you can use any tag you want from "),$=t("a"),Vs=r("tags"),Je=u(),K=t("pre"),Ve=u(),h=t("p"),Xs=r("4- Map the port of the docker container with the port of the hosting machine: to be able to access the data from outside the container, the default port of postgresql is "),we=t("code"),Ys=r("5432"),ea=r(", so I am going to map with the same port "),Se=t("code"),sa=r("5432"),aa=r(" (you can use any port you want)"),Xe=u(),Z=t("pre"),Ye=u(),x=t("p"),ta=r("5- Setup volumes to save the data on the hosting machine: if we dont set it the data will be erased when the container is stopped, by default the data is saved on the container under "),Pe=t("code"),na=r("/var/lib/postgresql/data/"),oa=r(" folder, so we map that folder to whatever folder in the hosting machine"),es=u(),z=t("pre"),ss=u(),k=t("p"),la=r("6- Add the environment variables: PostgreSQL requires 3 environment variables "),ge=t("code"),pa=r("POSTGRES_USER"),ra=r(", "),Oe=t("code"),ca=r("POSTGRES_PASSWORD"),ia=r(" and "),Re=t("code"),ua=r("POSTGRES_DB"),as=u(),J=t("pre"),ts=u(),oe=t("p"),De=t("strong"),fa=r("OR"),ns=u(),A=t("p"),da=r("you can set the environment variables in a "),Te=t("code"),ka=r(".env"),ha=r(" and configure the docker compose to use it from there"),os=u(),V=t("pre"),ls=u(),X=t("pre"),ps=u(),I=t("h3"),L=t("a"),xe=t("span"),ma=r("Step 3:"),rs=u(),C=t("p"),va=r("Open the terminal and navigate to the folder where the "),Ae=t("code"),Ea=r("docker-compose.yml"),ya=r(" file lives"),cs=u(),le=t("p"),Ie=t("strong"),_a=r("Run the docker compose:"),is=u(),Y=t("pre"),us=u(),H=t("p"),ba=r("I like to run the container as a deamon with "),Le=t("code"),wa=r("docker compose up -d"),Sa=r("."),fs=u(),G=t("p"),Pa=r("Now the database should be started successfully, and you can access it via "),Ce=t("code"),ga=r("http://localhost:5432"),Oa=r(" (or whatever the port you use)"),ds=u(),pe=t("p"),He=t("strong"),Ra=r("Stop the docker compose:"),ks=u(),ee=t("pre"),hs=u(),q=t("h3"),N=t("a"),Ge=t("span"),Da=r("Extra step:"),ms=u(),M=t("p"),Ta=r("This just a one way of using docker compose (basically how I like to use it), there is a lot of stuff I didnâ€™t cover and I highly suggest that you check the full "),se=t("a"),xa=r("Docker Compose documentation"),Aa=r("."),vs=u(),re=t("p"),Ia=r("Thatâ€™s it for this time, see you in the next post."),this.h()},l(e){v=n(e,"BLOCKQUOTE",{});var l=o(v);te=n(l,"P",{});var La=o(te);ie=n(La,"STRONG",{});var ja=o(ie);ue=n(ja,"EM",{});var Fa=o(ue);Os=c(Fa,"DISCLAIMER:"),Fa.forEach(s),ja.forEach(s),Rs=c(La," This is not a Docker 101, I assume you already have some basic knowledge and expertise with docker and also have docker already installed."),La.forEach(s),l.forEach(s),qe=f(e),E=n(e,"H1",{id:!0});var Ca=o(E);y=n(Ca,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var $a=o(y);fe=n($a,"SPAN",{class:!0}),o(fe).forEach(s),$a.forEach(s),Ds=c(Ca,"What is docker compose?"),Ca.forEach(s),Ne=f(e),_=n(e,"P",{});var Es=o(_);Ts=c(Es,"Docker Compose is a tool for defining and running multi-container Docker applications, it allows you to create and start multiple services from a "),de=n(Es,"CODE",{});var Ka=o(de);xs=c(Ka,"docker-compose.yml"),Ka.forEach(s),As=c(Es," configuration file."),Es.forEach(s),Me=f(e),b=n(e,"H1",{id:!0});var Ha=o(b);w=n(Ha,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Za=o(w);ke=n(Za,"SPAN",{class:!0}),o(ke).forEach(s),Za.forEach(s),Is=c(Ha,"Why using docker compose?"),Ha.forEach(s),Qe=f(e),S=n(e,"H2",{id:!0});var Ga=o(S);P=n(Ga,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var za=o(P);he=n(za,"SPAN",{class:!0}),o(he).forEach(s),za.forEach(s),Ls=c(Ga,"Lets get started with setting up a PostgreSQL database"),Ga.forEach(s),We=f(e),g=n(e,"H3",{id:!0});var qa=o(g);O=n(qa,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Ja=o(O);me=n(Ja,"SPAN",{class:!0}),o(me).forEach(s),Ja.forEach(s),Cs=c(qa,"Step 1:"),qa.forEach(s),Be=f(e),Q=n(e,"P",{});var Na=o(Q);Hs=c(Na,"In the root of your project folder, create a new file and name it "),ve=n(Na,"CODE",{});var Va=o(ve);Gs=c(Va,"docker-compose.yml"),Va.forEach(s),Na.forEach(s),Ue=f(e),R=n(e,"H3",{id:!0});var Ma=o(R);D=n(Ma,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Xa=o(D);Ee=n(Xa,"SPAN",{class:!0}),o(Ee).forEach(s),Xa.forEach(s),qs=c(Ma,"Step 2:"),Ma.forEach(s),je=f(e),ne=n(e,"P",{});var Ya=o(ne);Ns=c(Ya,"Letâ€™s open the file and start adding the configurations:"),Ya.forEach(s),Fe=f(e),W=n(e,"P",{});var Qa=o(W);Ms=c(Qa,"1- Specify the docker compose version: I am going to use "),ye=n(Qa,"CODE",{});var et=o(ye);Qs=c(et,'version: "3.3"'),et.forEach(s),Qa.forEach(s),$e=f(e),B=n(e,"PRE",{class:!0});var qt=o(B);qt.forEach(s),Ke=f(e),T=n(e,"P",{});var ys=o(T);Ws=c(ys,"2- Add the services (each service represent a container): in our case we are going to add one service, I am going to name it "),_e=n(ys,"CODE",{});var st=o(_e);Bs=c(st,"postgres-db"),st.forEach(s),Us=c(ys," you can name it what ever you want"),ys.forEach(s),Ze=f(e),U=n(e,"PRE",{class:!0});var Nt=o(U);Nt.forEach(s),ze=f(e),d=n(e,"P",{});var m=o(d);js=c(m,"3- Find the image you want to use on "),j=n(m,"A",{href:!0,rel:!0});var at=o(j);Fs=c(at,"Docker Hub"),at.forEach(s),$s=c(m,": "),be=n(m,"STRONG",{});var tt=o(be);Ks=c(tt,"make sure to use the official images"),tt.forEach(s),Zs=c(m,", I prefer to use "),F=n(m,"A",{href:!0,rel:!0});var nt=o(F);zs=c(nt,"postgres:latest"),nt.forEach(s),Js=c(m," which is alawys updated, you can use any tag you want from "),$=n(m,"A",{href:!0,rel:!0});var ot=o($);Vs=c(ot,"tags"),ot.forEach(s),m.forEach(s),Je=f(e),K=n(e,"PRE",{class:!0});var Mt=o(K);Mt.forEach(s),Ve=f(e),h=n(e,"P",{});var ce=o(h);Xs=c(ce,"4- Map the port of the docker container with the port of the hosting machine: to be able to access the data from outside the container, the default port of postgresql is "),we=n(ce,"CODE",{});var lt=o(we);Ys=c(lt,"5432"),lt.forEach(s),ea=c(ce,", so I am going to map with the same port "),Se=n(ce,"CODE",{});var pt=o(Se);sa=c(pt,"5432"),pt.forEach(s),aa=c(ce," (you can use any port you want)"),ce.forEach(s),Xe=f(e),Z=n(e,"PRE",{class:!0});var Qt=o(Z);Qt.forEach(s),Ye=f(e),x=n(e,"P",{});var _s=o(x);ta=c(_s,"5- Setup volumes to save the data on the hosting machine: if we dont set it the data will be erased when the container is stopped, by default the data is saved on the container under "),Pe=n(_s,"CODE",{});var rt=o(Pe);na=c(rt,"/var/lib/postgresql/data/"),rt.forEach(s),oa=c(_s," folder, so we map that folder to whatever folder in the hosting machine"),_s.forEach(s),es=f(e),z=n(e,"PRE",{class:!0});var Wt=o(z);Wt.forEach(s),ss=f(e),k=n(e,"P",{});var ae=o(k);la=c(ae,"6- Add the environment variables: PostgreSQL requires 3 environment variables "),ge=n(ae,"CODE",{});var ct=o(ge);pa=c(ct,"POSTGRES_USER"),ct.forEach(s),ra=c(ae,", "),Oe=n(ae,"CODE",{});var it=o(Oe);ca=c(it,"POSTGRES_PASSWORD"),it.forEach(s),ia=c(ae," and "),Re=n(ae,"CODE",{});var ut=o(Re);ua=c(ut,"POSTGRES_DB"),ut.forEach(s),ae.forEach(s),as=f(e),J=n(e,"PRE",{class:!0});var Bt=o(J);Bt.forEach(s),ts=f(e),oe=n(e,"P",{});var ft=o(oe);De=n(ft,"STRONG",{});var dt=o(De);fa=c(dt,"OR"),dt.forEach(s),ft.forEach(s),ns=f(e),A=n(e,"P",{});var bs=o(A);da=c(bs,"you can set the environment variables in a "),Te=n(bs,"CODE",{});var kt=o(Te);ka=c(kt,".env"),kt.forEach(s),ha=c(bs," and configure the docker compose to use it from there"),bs.forEach(s),os=f(e),V=n(e,"PRE",{class:!0});var Ut=o(V);Ut.forEach(s),ls=f(e),X=n(e,"PRE",{class:!0});var jt=o(X);jt.forEach(s),ps=f(e),I=n(e,"H3",{id:!0});var Wa=o(I);L=n(Wa,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ht=o(L);xe=n(ht,"SPAN",{class:!0}),o(xe).forEach(s),ht.forEach(s),ma=c(Wa,"Step 3:"),Wa.forEach(s),rs=f(e),C=n(e,"P",{});var ws=o(C);va=c(ws,"Open the terminal and navigate to the folder where the "),Ae=n(ws,"CODE",{});var mt=o(Ae);Ea=c(mt,"docker-compose.yml"),mt.forEach(s),ya=c(ws," file lives"),ws.forEach(s),cs=f(e),le=n(e,"P",{});var vt=o(le);Ie=n(vt,"STRONG",{});var Et=o(Ie);_a=c(Et,"Run the docker compose:"),Et.forEach(s),vt.forEach(s),is=f(e),Y=n(e,"PRE",{class:!0});var Ft=o(Y);Ft.forEach(s),us=f(e),H=n(e,"P",{});var Ss=o(H);ba=c(Ss,"I like to run the container as a deamon with "),Le=n(Ss,"CODE",{});var yt=o(Le);wa=c(yt,"docker compose up -d"),yt.forEach(s),Sa=c(Ss,"."),Ss.forEach(s),fs=f(e),G=n(e,"P",{});var Ps=o(G);Pa=c(Ps,"Now the database should be started successfully, and you can access it via "),Ce=n(Ps,"CODE",{});var _t=o(Ce);ga=c(_t,"http://localhost:5432"),_t.forEach(s),Oa=c(Ps," (or whatever the port you use)"),Ps.forEach(s),ds=f(e),pe=n(e,"P",{});var bt=o(pe);He=n(bt,"STRONG",{});var wt=o(He);Ra=c(wt,"Stop the docker compose:"),wt.forEach(s),bt.forEach(s),ks=f(e),ee=n(e,"PRE",{class:!0});var $t=o(ee);$t.forEach(s),hs=f(e),q=n(e,"H3",{id:!0});var Ba=o(q);N=n(Ba,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var St=o(N);Ge=n(St,"SPAN",{class:!0}),o(Ge).forEach(s),St.forEach(s),Da=c(Ba,"Extra step:"),Ba.forEach(s),ms=f(e),M=n(e,"P",{});var gs=o(M);Ta=c(gs,"This just a one way of using docker compose (basically how I like to use it), there is a lot of stuff I didnâ€™t cover and I highly suggest that you check the full "),se=n(gs,"A",{href:!0,rel:!0});var Pt=o(se);xa=c(Pt,"Docker Compose documentation"),Pt.forEach(s),Aa=c(gs,"."),gs.forEach(s),vs=f(e),re=n(e,"P",{});var gt=o(re);Ia=c(gt,"Thatâ€™s it for this time, see you in the next post."),gt.forEach(s),this.h()},h(){i(fe,"class","icon icon-link"),i(y,"aria-hidden","true"),i(y,"tabindex","-1"),i(y,"href","#what-is-docker-compose"),i(E,"id","what-is-docker-compose"),i(ke,"class","icon icon-link"),i(w,"aria-hidden","true"),i(w,"tabindex","-1"),i(w,"href","#why-using-docker-compose"),i(b,"id","why-using-docker-compose"),i(he,"class","icon icon-link"),i(P,"aria-hidden","true"),i(P,"tabindex","-1"),i(P,"href","#lets-get-started-with-setting-up-a-postgresql-database"),i(S,"id","lets-get-started-with-setting-up-a-postgresql-database"),i(me,"class","icon icon-link"),i(O,"aria-hidden","true"),i(O,"tabindex","-1"),i(O,"href","#step-1"),i(g,"id","step-1"),i(Ee,"class","icon icon-link"),i(D,"aria-hidden","true"),i(D,"tabindex","-1"),i(D,"href","#step-2"),i(R,"id","step-2"),i(B,"class","language-yml"),i(U,"class","language-yml"),i(j,"href","https://hub.docker.com"),i(j,"rel","nofollow"),i(F,"href","https://hub.docker.com/layers/postgres/library/postgres/latest/images/sha256-5e12b4abbed98e4cde708fcb6d2aa7c510f26e65e65474ac0ef7a9e85f21e60c?context=explore"),i(F,"rel","nofollow"),i($,"href","https://hub.docker.com/_/postgres/tags"),i($,"rel","nofollow"),i(K,"class","language-yml"),i(Z,"class","language-yml"),i(z,"class","language-yml"),i(J,"class","language-yml"),i(V,"class","language-yml"),i(X,"class","language-bash"),i(xe,"class","icon icon-link"),i(L,"aria-hidden","true"),i(L,"tabindex","-1"),i(L,"href","#step-3"),i(I,"id","step-3"),i(Y,"class","language-bash"),i(ee,"class","language-bash"),i(Ge,"class","icon icon-link"),i(N,"aria-hidden","true"),i(N,"tabindex","-1"),i(N,"href","#extra-step"),i(q,"id","extra-step"),i(se,"href","https://docs.docker.com/compose/"),i(se,"rel","nofollow")},m(e,l){p(e,v,l),a(v,te),a(te,ie),a(ie,ue),a(ue,Os),a(te,Rs),p(e,qe,l),p(e,E,l),a(E,y),a(y,fe),a(E,Ds),p(e,Ne,l),p(e,_,l),a(_,Ts),a(_,de),a(de,xs),a(_,As),p(e,Me,l),p(e,b,l),a(b,w),a(w,ke),a(b,Is),p(e,Qe,l),p(e,S,l),a(S,P),a(P,he),a(S,Ls),p(e,We,l),p(e,g,l),a(g,O),a(O,me),a(g,Cs),p(e,Be,l),p(e,Q,l),a(Q,Hs),a(Q,ve),a(ve,Gs),p(e,Ue,l),p(e,R,l),a(R,D),a(D,Ee),a(R,qs),p(e,je,l),p(e,ne,l),a(ne,Ns),p(e,Fe,l),p(e,W,l),a(W,Ms),a(W,ye),a(ye,Qs),p(e,$e,l),p(e,B,l),B.innerHTML=Rt,p(e,Ke,l),p(e,T,l),a(T,Ws),a(T,_e),a(_e,Bs),a(T,Us),p(e,Ze,l),p(e,U,l),U.innerHTML=Dt,p(e,ze,l),p(e,d,l),a(d,js),a(d,j),a(j,Fs),a(d,$s),a(d,be),a(be,Ks),a(d,Zs),a(d,F),a(F,zs),a(d,Js),a(d,$),a($,Vs),p(e,Je,l),p(e,K,l),K.innerHTML=Tt,p(e,Ve,l),p(e,h,l),a(h,Xs),a(h,we),a(we,Ys),a(h,ea),a(h,Se),a(Se,sa),a(h,aa),p(e,Xe,l),p(e,Z,l),Z.innerHTML=xt,p(e,Ye,l),p(e,x,l),a(x,ta),a(x,Pe),a(Pe,na),a(x,oa),p(e,es,l),p(e,z,l),z.innerHTML=At,p(e,ss,l),p(e,k,l),a(k,la),a(k,ge),a(ge,pa),a(k,ra),a(k,Oe),a(Oe,ca),a(k,ia),a(k,Re),a(Re,ua),p(e,as,l),p(e,J,l),J.innerHTML=It,p(e,ts,l),p(e,oe,l),a(oe,De),a(De,fa),p(e,ns,l),p(e,A,l),a(A,da),a(A,Te),a(Te,ka),a(A,ha),p(e,os,l),p(e,V,l),V.innerHTML=Lt,p(e,ls,l),p(e,X,l),X.innerHTML=Ct,p(e,ps,l),p(e,I,l),a(I,L),a(L,xe),a(I,ma),p(e,rs,l),p(e,C,l),a(C,va),a(C,Ae),a(Ae,Ea),a(C,ya),p(e,cs,l),p(e,le,l),a(le,Ie),a(Ie,_a),p(e,is,l),p(e,Y,l),Y.innerHTML=Ht,p(e,us,l),p(e,H,l),a(H,ba),a(H,Le),a(Le,wa),a(H,Sa),p(e,fs,l),p(e,G,l),a(G,Pa),a(G,Ce),a(Ce,ga),a(G,Oa),p(e,ds,l),p(e,pe,l),a(pe,He),a(He,Ra),p(e,ks,l),p(e,ee,l),ee.innerHTML=Gt,p(e,hs,l),p(e,q,l),a(q,N),a(N,Ge),a(q,Da),p(e,ms,l),p(e,M,l),a(M,Ta),a(M,se),a(se,xa),a(M,Aa),p(e,vs,l),p(e,re,l),a(re,Ia)},p:Ua,i:Ua,o:Ua,d(e){e&&s(v),e&&s(qe),e&&s(E),e&&s(Ne),e&&s(_),e&&s(Me),e&&s(b),e&&s(Qe),e&&s(S),e&&s(We),e&&s(g),e&&s(Be),e&&s(Q),e&&s(Ue),e&&s(R),e&&s(je),e&&s(ne),e&&s(Fe),e&&s(W),e&&s($e),e&&s(B),e&&s(Ke),e&&s(T),e&&s(Ze),e&&s(U),e&&s(ze),e&&s(d),e&&s(Je),e&&s(K),e&&s(Ve),e&&s(h),e&&s(Xe),e&&s(Z),e&&s(Ye),e&&s(x),e&&s(es),e&&s(z),e&&s(ss),e&&s(k),e&&s(as),e&&s(J),e&&s(ts),e&&s(oe),e&&s(ns),e&&s(A),e&&s(os),e&&s(V),e&&s(ls),e&&s(X),e&&s(ps),e&&s(I),e&&s(rs),e&&s(C),e&&s(cs),e&&s(le),e&&s(is),e&&s(Y),e&&s(us),e&&s(H),e&&s(fs),e&&s(G),e&&s(ds),e&&s(pe),e&&s(ks),e&&s(ee),e&&s(hs),e&&s(q),e&&s(ms),e&&s(M),e&&s(vs),e&&s(re)}}}const Xt={title:"Setup a PostgreSQL database with Docker",date:"2022-08-21T23:36:35.105Z",description:"A step by step guide on setting up a PostgreSQL database with Docker",tags:"PostgreSQL,Docker"};class Yt extends Kt{constructor(v){super(),Zt(this,v,null,Jt,zt,{})}}export{Yt as default,Xt as metadata};
