import{S as rc,i as cc,s as ic,k as t,r,a as u,l as e,m as o,h as a,u as c,c as k,p as i,H as O,b as l,E as n,n as Up}from"./index.fbbdd111.js";function uc(Or){let E,j,Ua,Vt,Rn,T,Wp,xn,Is,$t,An,I,H,Wa,Qt,Sn,Hs,Ns,Zt,os,zt,gn,N,Xt,ps,se,ae,Ln,C,M,Ga,ne,On,Cs,te,jn,J,Ya,P,In,ee,Ms,oe,pe,Js,le,re,f,B,Ka,ce,ie,qs,ue,ke,Us,de,fe,R,Fa,me,ye,Ws,he,ve,Gs,be,Ee,x,Va,_e,we,Ys,De,Te,Ks,Pe,Be,A,$a,Re,xe,Fs,Ae,Se,Vs,ge,Le,S,Qa,Oe,je,$s,Ie,He,Qs,Ne,Ce,g,Za,Me,Je,Zs,qe,Ue,zs,We,Hn,q,U,za,Ge,Nn,Xs,Ye,Cn,W,G,Xa,Ke,Mn,sa,Fe,Jn,ls,jr='<code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://deno.land/x/install/install.sh <span class="token operator">|</span> <span class="token function">sh</span></code>',qn,aa,na,Ve,rs,$e,Un,Y,Qe,sn,Ze,ze,Wn,v,Xe,an,so,ao,nn,no,to,tn,eo,Gn,_,oo,en,po,lo,on,ro,co,Yn,cs,Ir=`<code class="language-bash">$ deno repl
Deno <span class="token number">1.0</span>.0
<span class="token builtin class-name">exit</span> using ctrl+d or close<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">></span> console.log<span class="token punctuation">(</span><span class="token string">"Hello World !"</span><span class="token punctuation">)</span>
Hello World <span class="token operator">!</span></code>`,Kn,K,io,pn,uo,ko,Fn,ta,ea,fo,is,mo,Vn,F,V,ln,yo,$n,$,ho,rn,vo,bo,Qn,w,Eo,cn,_o,wo,un,Do,To,Zn,oa,Po,zn,us,Hr=`<code class="language-bash">$ deno run https://deno.land/std/examples/welcome.ts
Download https://deno.land/std/examples/welcome.ts
Compile https://deno.land/std/examples/welcome.ts
Welcome to Deno 🦕</code>`,Xn,pa,Bo,st,ks,Nr=`<code class="language-bash">$ deno run https://deno.land/std/examples/welcome.ts
Compile https://deno.land/std/examples/welcome.ts
Welcome to Deno 🦕</code>`,at,Q,Ro,kn,xo,Ao,nt,ds,Cr='<code class="language-bash">deno run <span class="token parameter variable">--reload</span> https://deno.land/std/examples/welcome.ts</code>',tt,Z,So,fs,go,Lo,et,la,ms,Oo,ys,jo,Io,ot,z,X,dn,Ho,pt,ss,No,hs,Co,Mo,lt,b,Jo,fn,qo,Uo,mn,Wo,Go,vs,Yo,rt,bs,Mr=`<code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Application <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'https://deno.land/x/oak/mod.ts'</span><span class="token punctuation">;</span></code>`,ct,L,Ko,yn,Fo,Vo,hn,$o,it,Es,Jr=`<code class="language-typescript"><span class="token keyword">const</span> env <span class="token operator">=</span> Deno<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token function">toObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">HOST</span> <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">HOST</span> <span class="token operator">||</span> <span class="token string">'127.0.0.1'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">PORT</span> <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">PORT</span> <span class="token operator">||</span> <span class="token number">7700</span><span class="token punctuation">;</span></code>`,ut,D,Qo,vn,Zo,zo,_s,Xo,sp,kt,ws,qr=`<code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Router <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'https://deno.land/x/oak/mod.ts'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> getBooks<span class="token punctuation">,</span> getBook<span class="token punctuation">,</span> addBook<span class="token punctuation">,</span> updateBook<span class="token punctuation">,</span> deleteBook <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./controller.ts'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
router
	<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/books'</span><span class="token punctuation">,</span> getBooks<span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/books/:isbn'</span><span class="token punctuation">,</span> getBook<span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/books'</span><span class="token punctuation">,</span> addBook<span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">'/books/:isbn'</span><span class="token punctuation">,</span> updateBook<span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">'/books/:isbn'</span><span class="token punctuation">,</span> deleteBook<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> router<span class="token punctuation">;</span></code>`,dt,d,ap,bn,np,tp,En,ep,op,_n,pp,lp,wn,rp,cp,Dn,ip,up,ft,as,kp,Tn,dp,fp,mt,Ds,Ur=`<code class="language-javascript"><span class="token keyword">interface</span> <span class="token class-name">IBook</span> <span class="token punctuation">&#123;</span>
	<span class="token literal-property property">isbn</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
	<span class="token literal-property property">author</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
	<span class="token literal-property property">title</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">let</span> <span class="token literal-property property">books</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>IBook<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
	<span class="token punctuation">&#123;</span>
		<span class="token literal-property property">isbn</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
		<span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">'Robin Wieruch'</span><span class="token punctuation">,</span>
		<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'The Road to React'</span>
	<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
	<span class="token punctuation">&#123;</span>
		<span class="token literal-property property">isbn</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
		<span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">'Kyle Simpson'</span><span class="token punctuation">,</span>
		<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"You Don't Know JS: Scope &amp; Closures"</span>
	<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
	<span class="token punctuation">&#123;</span>
		<span class="token literal-property property">isbn</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
		<span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">'Andreas A. Antonopoulos'</span><span class="token punctuation">,</span>
		<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Mastering Bitcoin'</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span></code>`,yt,ra,mp,ht,ca,yp,vt,Ts,Wr=`<code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">getBooks</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> response <span class="token punctuation">&#125;</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">response</span><span class="token operator">:</span> any <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
	response<span class="token punctuation">.</span>body <span class="token operator">=</span> books<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`,bt,ia,ua,Gp,Et,ka,hp,_t,Ps,Gr=`<code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">getBook</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> params<span class="token punctuation">,</span> response <span class="token punctuation">&#125;</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">isbn</span><span class="token operator">:</span> string <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token literal-property property">response</span><span class="token operator">:</span> any <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">const</span> <span class="token literal-property property">book</span><span class="token operator">:</span> IBook <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">=</span> <span class="token function">searchBookByIsbn</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>isbn<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>book<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		response<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
		response<span class="token punctuation">.</span>body <span class="token operator">=</span> books<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
		response<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">404</span><span class="token punctuation">;</span>
		response<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">Book not found.</span><span class="token template-punctuation string">&#96;</span></span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`,wt,da,fa,Yp,Dt,ma,vp,Tt,Bs,Yr=`<code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">addBook</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> request<span class="token punctuation">,</span> response <span class="token punctuation">&#125;</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">request</span><span class="token operator">:</span> any<span class="token punctuation">,</span> <span class="token literal-property property">response</span><span class="token operator">:</span> any <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> <span class="token literal-property property">book</span><span class="token operator">:</span> IBook <span class="token operator">=</span> body<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
	books<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>book<span class="token punctuation">)</span><span class="token punctuation">;</span>
	response<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'OK'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
	response<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`,Pt,ya,ha,Kp,Bt,va,ba,Fp,Rt,Ea,bp,xt,Rs,Kr=`<code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">updateBook</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span>
	params<span class="token punctuation">,</span>
	request<span class="token punctuation">,</span>
	response
<span class="token punctuation">&#125;</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
	<span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">isbn</span><span class="token operator">:</span> string <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">request</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
	<span class="token literal-property property">response</span><span class="token operator">:</span> any
<span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">let</span> <span class="token literal-property property">book</span><span class="token operator">:</span> IBook <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">=</span> <span class="token function">searchBookByIsbn</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>isbn<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>book<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">const</span> <span class="token literal-property property">updateInfos</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> author<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">,</span> title<span class="token operator">?</span><span class="token operator">:</span> string <span class="token punctuation">&#125;</span> <span class="token operator">=</span> body<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
		book <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span>book<span class="token punctuation">,</span> <span class="token operator">...</span>updateInfos <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
		books <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>books<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">book</span><span class="token punctuation">)</span> <span class="token operator">=></span> book<span class="token punctuation">.</span>isbn <span class="token operator">!==</span> params<span class="token punctuation">.</span>isbn<span class="token punctuation">)</span><span class="token punctuation">,</span> book<span class="token punctuation">]</span><span class="token punctuation">;</span>
		response<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
		response<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'OK'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
		response<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">404</span><span class="token punctuation">;</span>
		response<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">Book not found</span><span class="token template-punctuation string">&#96;</span></span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`,At,_a,wa,Vp,St,Da,Ta,$p,gt,Pa,Ep,Lt,xs,Fr=`<code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">deleteBook</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> params<span class="token punctuation">,</span> response <span class="token punctuation">&#125;</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">isbn</span><span class="token operator">:</span> string <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token literal-property property">response</span><span class="token operator">:</span> any <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
	books <span class="token operator">=</span> books<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">book</span><span class="token punctuation">)</span> <span class="token operator">=></span> book<span class="token punctuation">.</span>isbn <span class="token operator">!==</span> params<span class="token punctuation">.</span>isbn<span class="token punctuation">)</span><span class="token punctuation">;</span>
	response<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'OK'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
	response<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`,Ot,Ba,Ra,Qp,jt,xa,Aa,Zp,It,Sa,ga,_p,As,wp,Ht,ns,ts,Pn,Dp,Nt,m,Tp,Ss,Pp,Bp,gs,Rp,xp,Ls,Ap,Sp;return{c(){E=t("h1"),j=t("a"),Ua=t("span"),Vt=r("Deno v1.0"),Rn=u(),T=t("img"),xn=u(),Is=t("p"),$t=r("After 2 years of its first release, Deno v1.0 is finally here."),An=u(),I=t("h2"),H=t("a"),Wa=t("span"),Qt=r("So, what is Deno anyway ?"),Sn=u(),Hs=t("blockquote"),Ns=t("p"),Zt=r("Deno is a simple, modern and secure runtime for JavaScript and TypeScript that uses V8 and is built in Rust. "),os=t("a"),zt=r("Deno’s official website"),gn=u(),N=t("p"),Xt=r("Ryan Dahl the original creator of Node.js (the popular server-side JavaScript runtime) announced Deno at JSConf EU 2018 "),ps=t("a"),se=r("on is his talk"),ae=r(" titled “10 Things I Regret About Node.js” ( From the title you can see where are we heading to ). In another word, if you are familiar with Node.js then Deno is just like that. Except that it’s improved in many ways, it’s created from bottom to top to be a better implementation of Node.js."),Ln=u(),C=t("h2"),M=t("a"),Ga=t("span"),ne=r("Simple comparison with Node.js"),On=u(),Cs=t("p"),te=r("Since Deno and Node.js serve the same purpose, it’s possible to compare the two directly."),jn=u(),J=t("table"),Ya=t("thead"),P=t("tr"),In=t("th"),ee=u(),Ms=t("th"),oe=r("Node"),pe=u(),Js=t("th"),le=r("Deno"),re=u(),f=t("tbody"),B=t("tr"),Ka=t("td"),ce=r("Engine"),ie=u(),qs=t("td"),ue=r("V8"),ke=u(),Us=t("td"),de=r("V8"),fe=u(),R=t("tr"),Fa=t("td"),me=r("Written in"),ye=u(),Ws=t("td"),he=r("C++ & JavaScript"),ve=u(),Gs=t("td"),be=r("Rust & Typescript"),Ee=u(),x=t("tr"),Va=t("td"),_e=r("Package managing"),we=u(),Ys=t("td"),De=r("package managers: npm"),Te=u(),Ks=t("td"),Pe=r("uses URLs"),Be=u(),A=t("tr"),$a=t("td"),Re=r("Importing pacakges"),xe=u(),Fs=t("td"),Ae=r("CommonJS syntax"),Se=u(),Vs=t("td"),ge=r("ES Modules"),Le=u(),S=t("tr"),Qa=t("td"),Oe=r("Security"),je=u(),$s=t("td"),Ie=r("full access"),He=u(),Qs=t("td"),Ne=r("permissioned access"),Ce=u(),g=t("tr"),Za=t("td"),Me=r("TypeScript support"),Je=u(),Zs=t("td"),qe=r("not built in"),Ue=u(),zs=t("td"),We=r("built in"),Hn=u(),q=t("h2"),U=t("a"),za=t("span"),Ge=r("A Deno tutorial"),Nn=u(),Xs=t("p"),Ye=r("Let’s play a little bit with Deno."),Cn=u(),W=t("h3"),G=t("a"),Xa=t("span"),Ke=r("Deno’s Installation"),Mn=u(),sa=t("p"),Fe=r("To install Deno just copy and paste this command line in your terminal."),Jn=u(),ls=t("pre"),qn=u(),aa=t("p"),na=t("em"),Ve=r("For more details check "),rs=t("a"),$e=r("Deno’s official installation guide."),Un=u(),Y=t("p"),Qe=r("When it’s done, you will have access to the "),sn=t("code"),Ze=r("deno"),ze=r(" command."),Wn=u(),v=t("p"),Xe=r("You can run "),an=t("code"),so=r("deno --help"),ao=r(" to get the list of the options and subcommands provided by Deno, and you can run "),nn=t("code"),no=r("deno <subcommand> --help"),to=r(" to get additional informations specific the subcommand for example: "),tn=t("code"),eo=r("deno run --help"),Gn=u(),_=t("p"),oo=r("Now you can run "),en=t("code"),po=r("deno"),lo=r(" or "),on=t("code"),ro=r("deno repl"),co=r(" to open the REPL (Read-Execute-Print-Loop) and start typing some Javascript"),Yn=u(),cs=t("pre"),Kn=u(),K=t("p"),io=r("For the mean time (depending on when you’re reading this) on "),pn=t("strong"),uo=r("May 14 2020"),ko=r(" the REPL supports only Javascript:"),Fn=u(),ta=t("blockquote"),ea=t("p"),fo=r("There are many things we can do to improve the REPL without introducing the TS compiler. We should do those things first (e.g. improve inspect, tab completion). Once we’re on par with Node’s REPL, we can start looking into how to go beyond that by using typescript. "),is=t("a"),mo=r("Ryan Dahl’s comment on TypeScript support in REPL"),Vn=u(),F=t("h3"),V=t("a"),ln=t("span"),yo=r("Run a Deno app"),$n=u(),$=t("p"),ho=r("Use "),rn=t("code"),vo=r("deno run <entry-point>"),bo=r(" command to launch a Deno app."),Qn=u(),w=t("p"),Eo=r("The entry point can be "),cn=t("code"),_o=r(".js"),wo=r(" file, "),un=t("code"),Do=r(".ts"),To=r(" file or even a URL that points to an app entry point and Deno will download, compile and then run it for you:"),Zn=u(),oa=t("p"),Po=r("for example: s"),zn=u(),us=t("pre"),Xn=u(),pa=t("p"),Bo=r("If you run the program again, it gets compiled directly it does not need to be downloaded again, it’s now cached by Deno:"),st=u(),ks=t("pre"),at=u(),Q=t("p"),Ro=r("You can force a reload of the original source with the "),kn=t("code"),xo=r("--reload"),Ao=r(" flag"),nt=u(),ds=t("pre"),tt=u(),Z=t("p"),So=r("And If you open the "),fs=t("a"),go=r("https://deno.land/std/examples/welcome.ts"),Lo=r(` URL with
the browser, you’ll get the page that contains the code and it’s documentation.`),et=u(),la=t("p"),ms=t("strong"),Oo=r("The Deno website provides other examples in the "),ys=t("a"),jo=r("examples page"),Io=r("."),ot=u(),z=t("h3"),X=t("a"),dn=t("span"),Ho=r("Let’s build a simple REST API"),pt=u(),ss=t("p"),No=r("We are going to use "),hs=t("a"),Co=r("oak framework"),Mo=r(" and Typescript (you can also use Javascript if you want to)"),lt=u(),b=t("p"),Jo=r("Let’s start by creating an app.ts file and import the "),fn=t("code"),qo=r("Application"),Uo=r(" and "),mn=t("code"),Wo=r("server"),Go=r(" from "),vs=t("a"),Yo=r("https://deno.land/x/oak/mod.ts"),rt=u(),bs=t("pre"),ct=u(),L=t("p"),Ko=r("then we need to set the environment variables "),yn=t("code"),Fo=r("HOST"),Vo=r(" and "),hn=t("code"),$o=r("PORT"),it=u(),Es=t("pre"),ut=u(),D=t("p"),Qo=r("Now create the routes.ts file import "),vn=t("code"),Zo=r("Router"),zo=r(" from "),_s=t("a"),Xo=r("https://deno.land/x/oak/mod.ts"),sp=r(" and create the routes."),kt=u(),ws=t("pre"),dt=u(),d=t("p"),ap=r("NOTE: the functions "),bn=t("code"),np=r("getBooks"),tp=r(", "),En=t("code"),ep=r("getBook"),op=r(", "),_n=t("code"),pp=r("addBook"),lp=r(", "),wn=t("code"),rp=r("updateBook"),cp=r(" and "),Dn=t("code"),ip=r("deleteBook"),up=r(" are imported from a local file, it’s just we haven’t created them yet."),ft=u(),as=t("p"),kp=r("Let’s create the controller.ts file and define an interface for a book "),Tn=t("code"),dp=r("IBook"),fp=r(", then we declare an initial array of book objects:"),mt=u(),Ds=t("pre"),yt=u(),ra=t("p"),mp=r("Now let’s implement the functions one by one"),ht=u(),ca=t("p"),yp=r("getBooks: returns all the books on the list."),vt=u(),Ts=t("pre"),bt=u(),ia=t("p"),ua=t("img"),Et=u(),ka=t("p"),hp=r("getBook: returns a single book by its isbn, or error message if not found."),_t=u(),Ps=t("pre"),wt=u(),da=t("p"),fa=t("img"),Dt=u(),ma=t("p"),vp=r("addBook: add a book to the books list."),Tt=u(),Bs=t("pre"),Pt=u(),ya=t("p"),ha=t("img"),Bt=u(),va=t("p"),ba=t("img"),Rt=u(),Ea=t("p"),bp=r("updateBook: updates a book if exists, return error message if not."),xt=u(),Rs=t("pre"),At=u(),_a=t("p"),wa=t("img"),St=u(),Da=t("p"),Ta=t("img"),gt=u(),Pa=t("p"),Ep=r("deleteBook: deletes a book from the books list."),Lt=u(),xs=t("pre"),Ot=u(),Ba=t("p"),Ra=t("img"),jt=u(),xa=t("p"),Aa=t("img"),It=u(),Sa=t("p"),ga=t("strong"),_p=r("Here is the "),As=t("a"),wp=r("source code on github"),Ht=u(),ns=t("h2"),ts=t("a"),Pn=t("span"),Dp=r("You want more of Deno ?"),Nt=u(),m=t("p"),Tp=r("Here is some resources: "),Ss=t("a"),Pp=r("Deno’s official website"),Bp=r(", "),gs=t("a"),Rp=r("The API documentation"),xp=r(" and you can find a lot more resources, libraries and frameworks in the "),Ls=t("a"),Ap=r("Deno’s awesome list"),Sp=r("."),this.h()},l(s){E=e(s,"H1",{id:!0});var p=o(E);j=e(p,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var zp=o(j);Ua=e(zp,"SPAN",{class:!0}),o(Ua).forEach(a),zp.forEach(a),Vt=c(p,"Deno v1.0"),p.forEach(a),Rn=k(s),T=e(s,"IMG",{src:!0,alt:!0,width:!0,height:!0}),xn=k(s),Is=e(s,"P",{});var Xp=o(Is);$t=c(Xp,"After 2 years of its first release, Deno v1.0 is finally here."),Xp.forEach(a),An=k(s),I=e(s,"H2",{id:!0});var gp=o(I);H=e(gp,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var sl=o(H);Wa=e(sl,"SPAN",{class:!0}),o(Wa).forEach(a),sl.forEach(a),Qt=c(gp,"So, what is Deno anyway ?"),gp.forEach(a),Sn=k(s),Hs=e(s,"BLOCKQUOTE",{});var al=o(Hs);Ns=e(al,"P",{});var Lp=o(Ns);Zt=c(Lp,"Deno is a simple, modern and secure runtime for JavaScript and TypeScript that uses V8 and is built in Rust. "),os=e(Lp,"A",{href:!0,rel:!0});var nl=o(os);zt=c(nl,"Deno’s official website"),nl.forEach(a),Lp.forEach(a),al.forEach(a),gn=k(s),N=e(s,"P",{});var Ct=o(N);Xt=c(Ct,"Ryan Dahl the original creator of Node.js (the popular server-side JavaScript runtime) announced Deno at JSConf EU 2018 "),ps=e(Ct,"A",{href:!0,rel:!0});var tl=o(ps);se=c(tl,"on is his talk"),tl.forEach(a),ae=c(Ct," titled “10 Things I Regret About Node.js” ( From the title you can see where are we heading to ). In another word, if you are familiar with Node.js then Deno is just like that. Except that it’s improved in many ways, it’s created from bottom to top to be a better implementation of Node.js."),Ct.forEach(a),Ln=k(s),C=e(s,"H2",{id:!0});var Op=o(C);M=e(Op,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var el=o(M);Ga=e(el,"SPAN",{class:!0}),o(Ga).forEach(a),el.forEach(a),ne=c(Op,"Simple comparison with Node.js"),Op.forEach(a),On=k(s),Cs=e(s,"P",{});var ol=o(Cs);te=c(ol,"Since Deno and Node.js serve the same purpose, it’s possible to compare the two directly."),ol.forEach(a),jn=k(s),J=e(s,"TABLE",{});var Mt=o(J);Ya=e(Mt,"THEAD",{});var pl=o(Ya);P=e(pl,"TR",{});var La=o(P);In=e(La,"TH",{}),o(In).forEach(a),ee=k(La),Ms=e(La,"TH",{align:!0});var ll=o(Ms);oe=c(ll,"Node"),ll.forEach(a),pe=k(La),Js=e(La,"TH",{align:!0});var rl=o(Js);le=c(rl,"Deno"),rl.forEach(a),La.forEach(a),pl.forEach(a),re=k(Mt),f=e(Mt,"TBODY",{});var y=o(f);B=e(y,"TR",{});var Oa=o(B);Ka=e(Oa,"TD",{});var cl=o(Ka);ce=c(cl,"Engine"),cl.forEach(a),ie=k(Oa),qs=e(Oa,"TD",{align:!0});var il=o(qs);ue=c(il,"V8"),il.forEach(a),ke=k(Oa),Us=e(Oa,"TD",{align:!0});var ul=o(Us);de=c(ul,"V8"),ul.forEach(a),Oa.forEach(a),fe=k(y),R=e(y,"TR",{});var ja=o(R);Fa=e(ja,"TD",{});var kl=o(Fa);me=c(kl,"Written in"),kl.forEach(a),ye=k(ja),Ws=e(ja,"TD",{align:!0});var dl=o(Ws);he=c(dl,"C++ & JavaScript"),dl.forEach(a),ve=k(ja),Gs=e(ja,"TD",{align:!0});var fl=o(Gs);be=c(fl,"Rust & Typescript"),fl.forEach(a),ja.forEach(a),Ee=k(y),x=e(y,"TR",{});var Ia=o(x);Va=e(Ia,"TD",{});var ml=o(Va);_e=c(ml,"Package managing"),ml.forEach(a),we=k(Ia),Ys=e(Ia,"TD",{align:!0});var yl=o(Ys);De=c(yl,"package managers: npm"),yl.forEach(a),Te=k(Ia),Ks=e(Ia,"TD",{align:!0});var hl=o(Ks);Pe=c(hl,"uses URLs"),hl.forEach(a),Ia.forEach(a),Be=k(y),A=e(y,"TR",{});var Ha=o(A);$a=e(Ha,"TD",{});var vl=o($a);Re=c(vl,"Importing pacakges"),vl.forEach(a),xe=k(Ha),Fs=e(Ha,"TD",{align:!0});var bl=o(Fs);Ae=c(bl,"CommonJS syntax"),bl.forEach(a),Se=k(Ha),Vs=e(Ha,"TD",{align:!0});var El=o(Vs);ge=c(El,"ES Modules"),El.forEach(a),Ha.forEach(a),Le=k(y),S=e(y,"TR",{});var Na=o(S);Qa=e(Na,"TD",{});var _l=o(Qa);Oe=c(_l,"Security"),_l.forEach(a),je=k(Na),$s=e(Na,"TD",{align:!0});var wl=o($s);Ie=c(wl,"full access"),wl.forEach(a),He=k(Na),Qs=e(Na,"TD",{align:!0});var Dl=o(Qs);Ne=c(Dl,"permissioned access"),Dl.forEach(a),Na.forEach(a),Ce=k(y),g=e(y,"TR",{});var Ca=o(g);Za=e(Ca,"TD",{});var Tl=o(Za);Me=c(Tl,"TypeScript support"),Tl.forEach(a),Je=k(Ca),Zs=e(Ca,"TD",{align:!0});var Pl=o(Zs);qe=c(Pl,"not built in"),Pl.forEach(a),Ue=k(Ca),zs=e(Ca,"TD",{align:!0});var Bl=o(zs);We=c(Bl,"built in"),Bl.forEach(a),Ca.forEach(a),y.forEach(a),Mt.forEach(a),Hn=k(s),q=e(s,"H2",{id:!0});var jp=o(q);U=e(jp,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Rl=o(U);za=e(Rl,"SPAN",{class:!0}),o(za).forEach(a),Rl.forEach(a),Ge=c(jp,"A Deno tutorial"),jp.forEach(a),Nn=k(s),Xs=e(s,"P",{});var xl=o(Xs);Ye=c(xl,"Let’s play a little bit with Deno."),xl.forEach(a),Cn=k(s),W=e(s,"H3",{id:!0});var Ip=o(W);G=e(Ip,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Al=o(G);Xa=e(Al,"SPAN",{class:!0}),o(Xa).forEach(a),Al.forEach(a),Ke=c(Ip,"Deno’s Installation"),Ip.forEach(a),Mn=k(s),sa=e(s,"P",{});var Sl=o(sa);Fe=c(Sl,"To install Deno just copy and paste this command line in your terminal."),Sl.forEach(a),Jn=k(s),ls=e(s,"PRE",{class:!0});var Vr=o(ls);Vr.forEach(a),qn=k(s),aa=e(s,"P",{});var gl=o(aa);na=e(gl,"EM",{});var Hp=o(na);Ve=c(Hp,"For more details check "),rs=e(Hp,"A",{href:!0,rel:!0});var Ll=o(rs);$e=c(Ll,"Deno’s official installation guide."),Ll.forEach(a),Hp.forEach(a),gl.forEach(a),Un=k(s),Y=e(s,"P",{});var Jt=o(Y);Qe=c(Jt,"When it’s done, you will have access to the "),sn=e(Jt,"CODE",{});var Ol=o(sn);Ze=c(Ol,"deno"),Ol.forEach(a),ze=c(Jt," command."),Jt.forEach(a),Wn=k(s),v=e(s,"P",{});var Os=o(v);Xe=c(Os,"You can run "),an=e(Os,"CODE",{});var jl=o(an);so=c(jl,"deno --help"),jl.forEach(a),ao=c(Os," to get the list of the options and subcommands provided by Deno, and you can run "),nn=e(Os,"CODE",{});var Il=o(nn);no=c(Il,"deno <subcommand> --help"),Il.forEach(a),to=c(Os," to get additional informations specific the subcommand for example: "),tn=e(Os,"CODE",{});var Hl=o(tn);eo=c(Hl,"deno run --help"),Hl.forEach(a),Os.forEach(a),Gn=k(s),_=e(s,"P",{});var Ma=o(_);oo=c(Ma,"Now you can run "),en=e(Ma,"CODE",{});var Nl=o(en);po=c(Nl,"deno"),Nl.forEach(a),lo=c(Ma," or "),on=e(Ma,"CODE",{});var Cl=o(on);ro=c(Cl,"deno repl"),Cl.forEach(a),co=c(Ma," to open the REPL (Read-Execute-Print-Loop) and start typing some Javascript"),Ma.forEach(a),Yn=k(s),cs=e(s,"PRE",{class:!0});var $r=o(cs);$r.forEach(a),Kn=k(s),K=e(s,"P",{});var qt=o(K);io=c(qt,"For the mean time (depending on when you’re reading this) on "),pn=e(qt,"STRONG",{});var Ml=o(pn);uo=c(Ml,"May 14 2020"),Ml.forEach(a),ko=c(qt," the REPL supports only Javascript:"),qt.forEach(a),Fn=k(s),ta=e(s,"BLOCKQUOTE",{});var Jl=o(ta);ea=e(Jl,"P",{});var Np=o(ea);fo=c(Np,"There are many things we can do to improve the REPL without introducing the TS compiler. We should do those things first (e.g. improve inspect, tab completion). Once we’re on par with Node’s REPL, we can start looking into how to go beyond that by using typescript. "),is=e(Np,"A",{href:!0,rel:!0});var ql=o(is);mo=c(ql,"Ryan Dahl’s comment on TypeScript support in REPL"),ql.forEach(a),Np.forEach(a),Jl.forEach(a),Vn=k(s),F=e(s,"H3",{id:!0});var Cp=o(F);V=e(Cp,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Ul=o(V);ln=e(Ul,"SPAN",{class:!0}),o(ln).forEach(a),Ul.forEach(a),yo=c(Cp,"Run a Deno app"),Cp.forEach(a),$n=k(s),$=e(s,"P",{});var Ut=o($);ho=c(Ut,"Use "),rn=e(Ut,"CODE",{});var Wl=o(rn);vo=c(Wl,"deno run <entry-point>"),Wl.forEach(a),bo=c(Ut," command to launch a Deno app."),Ut.forEach(a),Qn=k(s),w=e(s,"P",{});var Ja=o(w);Eo=c(Ja,"The entry point can be "),cn=e(Ja,"CODE",{});var Gl=o(cn);_o=c(Gl,".js"),Gl.forEach(a),wo=c(Ja," file, "),un=e(Ja,"CODE",{});var Yl=o(un);Do=c(Yl,".ts"),Yl.forEach(a),To=c(Ja," file or even a URL that points to an app entry point and Deno will download, compile and then run it for you:"),Ja.forEach(a),Zn=k(s),oa=e(s,"P",{});var Kl=o(oa);Po=c(Kl,"for example: s"),Kl.forEach(a),zn=k(s),us=e(s,"PRE",{class:!0});var Qr=o(us);Qr.forEach(a),Xn=k(s),pa=e(s,"P",{});var Fl=o(pa);Bo=c(Fl,"If you run the program again, it gets compiled directly it does not need to be downloaded again, it’s now cached by Deno:"),Fl.forEach(a),st=k(s),ks=e(s,"PRE",{class:!0});var Zr=o(ks);Zr.forEach(a),at=k(s),Q=e(s,"P",{});var Wt=o(Q);Ro=c(Wt,"You can force a reload of the original source with the "),kn=e(Wt,"CODE",{});var Vl=o(kn);xo=c(Vl,"--reload"),Vl.forEach(a),Ao=c(Wt," flag"),Wt.forEach(a),nt=k(s),ds=e(s,"PRE",{class:!0});var zr=o(ds);zr.forEach(a),tt=k(s),Z=e(s,"P",{});var Gt=o(Z);So=c(Gt,"And If you open the "),fs=e(Gt,"A",{href:!0,rel:!0});var $l=o(fs);go=c($l,"https://deno.land/std/examples/welcome.ts"),$l.forEach(a),Lo=c(Gt,` URL with
the browser, you’ll get the page that contains the code and it’s documentation.`),Gt.forEach(a),et=k(s),la=e(s,"P",{});var Ql=o(la);ms=e(Ql,"STRONG",{});var Yt=o(ms);Oo=c(Yt,"The Deno website provides other examples in the "),ys=e(Yt,"A",{href:!0,rel:!0});var Zl=o(ys);jo=c(Zl,"examples page"),Zl.forEach(a),Io=c(Yt,"."),Yt.forEach(a),Ql.forEach(a),ot=k(s),z=e(s,"H3",{id:!0});var Mp=o(z);X=e(Mp,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var zl=o(X);dn=e(zl,"SPAN",{class:!0}),o(dn).forEach(a),zl.forEach(a),Ho=c(Mp,"Let’s build a simple REST API"),Mp.forEach(a),pt=k(s),ss=e(s,"P",{});var Kt=o(ss);No=c(Kt,"We are going to use "),hs=e(Kt,"A",{href:!0,rel:!0});var Xl=o(hs);Co=c(Xl,"oak framework"),Xl.forEach(a),Mo=c(Kt," and Typescript (you can also use Javascript if you want to)"),Kt.forEach(a),lt=k(s),b=e(s,"P",{});var js=o(b);Jo=c(js,"Let’s start by creating an app.ts file and import the "),fn=e(js,"CODE",{});var sr=o(fn);qo=c(sr,"Application"),sr.forEach(a),Uo=c(js," and "),mn=e(js,"CODE",{});var ar=o(mn);Wo=c(ar,"server"),ar.forEach(a),Go=c(js," from "),vs=e(js,"A",{href:!0,rel:!0});var nr=o(vs);Yo=c(nr,"https://deno.land/x/oak/mod.ts"),nr.forEach(a),js.forEach(a),rt=k(s),bs=e(s,"PRE",{class:!0});var Xr=o(bs);Xr.forEach(a),ct=k(s),L=e(s,"P",{});var Bn=o(L);Ko=c(Bn,"then we need to set the environment variables "),yn=e(Bn,"CODE",{});var tr=o(yn);Fo=c(tr,"HOST"),tr.forEach(a),Vo=c(Bn," and "),hn=e(Bn,"CODE",{});var er=o(hn);$o=c(er,"PORT"),er.forEach(a),Bn.forEach(a),it=k(s),Es=e(s,"PRE",{class:!0});var sc=o(Es);sc.forEach(a),ut=k(s),D=e(s,"P",{});var qa=o(D);Qo=c(qa,"Now create the routes.ts file import "),vn=e(qa,"CODE",{});var or=o(vn);Zo=c(or,"Router"),or.forEach(a),zo=c(qa," from "),_s=e(qa,"A",{href:!0,rel:!0});var pr=o(_s);Xo=c(pr,"https://deno.land/x/oak/mod.ts"),pr.forEach(a),sp=c(qa," and create the routes."),qa.forEach(a),kt=k(s),ws=e(s,"PRE",{class:!0});var ac=o(ws);ac.forEach(a),dt=k(s),d=e(s,"P",{});var h=o(d);ap=c(h,"NOTE: the functions "),bn=e(h,"CODE",{});var lr=o(bn);np=c(lr,"getBooks"),lr.forEach(a),tp=c(h,", "),En=e(h,"CODE",{});var rr=o(En);ep=c(rr,"getBook"),rr.forEach(a),op=c(h,", "),_n=e(h,"CODE",{});var cr=o(_n);pp=c(cr,"addBook"),cr.forEach(a),lp=c(h,", "),wn=e(h,"CODE",{});var ir=o(wn);rp=c(ir,"updateBook"),ir.forEach(a),cp=c(h," and "),Dn=e(h,"CODE",{});var ur=o(Dn);ip=c(ur,"deleteBook"),ur.forEach(a),up=c(h," are imported from a local file, it’s just we haven’t created them yet."),h.forEach(a),ft=k(s),as=e(s,"P",{});var Ft=o(as);kp=c(Ft,"Let’s create the controller.ts file and define an interface for a book "),Tn=e(Ft,"CODE",{});var kr=o(Tn);dp=c(kr,"IBook"),kr.forEach(a),fp=c(Ft,", then we declare an initial array of book objects:"),Ft.forEach(a),mt=k(s),Ds=e(s,"PRE",{class:!0});var nc=o(Ds);nc.forEach(a),yt=k(s),ra=e(s,"P",{});var dr=o(ra);mp=c(dr,"Now let’s implement the functions one by one"),dr.forEach(a),ht=k(s),ca=e(s,"P",{});var fr=o(ca);yp=c(fr,"getBooks: returns all the books on the list."),fr.forEach(a),vt=k(s),Ts=e(s,"PRE",{class:!0});var tc=o(Ts);tc.forEach(a),bt=k(s),ia=e(s,"P",{});var mr=o(ia);ua=e(mr,"IMG",{src:!0,alt:!0}),mr.forEach(a),Et=k(s),ka=e(s,"P",{});var yr=o(ka);hp=c(yr,"getBook: returns a single book by its isbn, or error message if not found."),yr.forEach(a),_t=k(s),Ps=e(s,"PRE",{class:!0});var ec=o(Ps);ec.forEach(a),wt=k(s),da=e(s,"P",{});var hr=o(da);fa=e(hr,"IMG",{src:!0,alt:!0}),hr.forEach(a),Dt=k(s),ma=e(s,"P",{});var vr=o(ma);vp=c(vr,"addBook: add a book to the books list."),vr.forEach(a),Tt=k(s),Bs=e(s,"PRE",{class:!0});var oc=o(Bs);oc.forEach(a),Pt=k(s),ya=e(s,"P",{});var br=o(ya);ha=e(br,"IMG",{src:!0,alt:!0}),br.forEach(a),Bt=k(s),va=e(s,"P",{});var Er=o(va);ba=e(Er,"IMG",{src:!0,alt:!0}),Er.forEach(a),Rt=k(s),Ea=e(s,"P",{});var _r=o(Ea);bp=c(_r,"updateBook: updates a book if exists, return error message if not."),_r.forEach(a),xt=k(s),Rs=e(s,"PRE",{class:!0});var pc=o(Rs);pc.forEach(a),At=k(s),_a=e(s,"P",{});var wr=o(_a);wa=e(wr,"IMG",{src:!0,alt:!0}),wr.forEach(a),St=k(s),Da=e(s,"P",{});var Dr=o(Da);Ta=e(Dr,"IMG",{src:!0,alt:!0}),Dr.forEach(a),gt=k(s),Pa=e(s,"P",{});var Tr=o(Pa);Ep=c(Tr,"deleteBook: deletes a book from the books list."),Tr.forEach(a),Lt=k(s),xs=e(s,"PRE",{class:!0});var lc=o(xs);lc.forEach(a),Ot=k(s),Ba=e(s,"P",{});var Pr=o(Ba);Ra=e(Pr,"IMG",{src:!0,alt:!0}),Pr.forEach(a),jt=k(s),xa=e(s,"P",{});var Br=o(xa);Aa=e(Br,"IMG",{src:!0,alt:!0}),Br.forEach(a),It=k(s),Sa=e(s,"P",{});var Rr=o(Sa);ga=e(Rr,"STRONG",{});var Jp=o(ga);_p=c(Jp,"Here is the "),As=e(Jp,"A",{href:!0,rel:!0});var xr=o(As);wp=c(xr,"source code on github"),xr.forEach(a),Jp.forEach(a),Rr.forEach(a),Ht=k(s),ns=e(s,"H2",{id:!0});var qp=o(ns);ts=e(qp,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Ar=o(ts);Pn=e(Ar,"SPAN",{class:!0}),o(Pn).forEach(a),Ar.forEach(a),Dp=c(qp,"You want more of Deno ?"),qp.forEach(a),Nt=k(s),m=e(s,"P",{});var es=o(m);Tp=c(es,"Here is some resources: "),Ss=e(es,"A",{href:!0,rel:!0});var Sr=o(Ss);Pp=c(Sr,"Deno’s official website"),Sr.forEach(a),Bp=c(es,", "),gs=e(es,"A",{href:!0,rel:!0});var gr=o(gs);Rp=c(gr,"The API documentation"),gr.forEach(a),xp=c(es," and you can find a lot more resources, libraries and frameworks in the "),Ls=e(es,"A",{href:!0,rel:!0});var Lr=o(Ls);Ap=c(Lr,"Deno’s awesome list"),Lr.forEach(a),Sp=c(es,"."),es.forEach(a),this.h()},h(){i(Ua,"class","icon icon-link"),i(j,"aria-hidden","true"),i(j,"tabindex","-1"),i(j,"href","#deno-v10"),i(E,"id","deno-v10"),O(T.src,Wp="/blog/images/simple-rest-api-with-deno/logo.svg")||i(T,"src",Wp),i(T,"alt","Deno's logo"),i(T,"width","200"),i(T,"height","200"),i(Wa,"class","icon icon-link"),i(H,"aria-hidden","true"),i(H,"tabindex","-1"),i(H,"href","#so-what-is-deno-anyway-"),i(I,"id","so-what-is-deno-anyway-"),i(os,"href","http://deno.land"),i(os,"rel","nofollow"),i(ps,"href","https://youtu.be/M3BM9TB-8yA"),i(ps,"rel","nofollow"),i(Ga,"class","icon icon-link"),i(M,"aria-hidden","true"),i(M,"tabindex","-1"),i(M,"href","#simple-comparison-with-nodejs"),i(C,"id","simple-comparison-with-nodejs"),i(Ms,"align","center"),i(Js,"align","center"),i(qs,"align","center"),i(Us,"align","center"),i(Ws,"align","center"),i(Gs,"align","center"),i(Ys,"align","center"),i(Ks,"align","center"),i(Fs,"align","center"),i(Vs,"align","center"),i($s,"align","center"),i(Qs,"align","center"),i(Zs,"align","center"),i(zs,"align","center"),i(za,"class","icon icon-link"),i(U,"aria-hidden","true"),i(U,"tabindex","-1"),i(U,"href","#a-deno-tutorial"),i(q,"id","a-deno-tutorial"),i(Xa,"class","icon icon-link"),i(G,"aria-hidden","true"),i(G,"tabindex","-1"),i(G,"href","#denos-installation"),i(W,"id","denos-installation"),i(ls,"class","language-bash"),i(rs,"href","https://github.com/denoland/deno_install"),i(rs,"rel","nofollow"),i(cs,"class","language-bash"),i(is,"href","https://github.com/denoland/deno/pull/3760#issuecomment-590472390"),i(is,"rel","nofollow"),i(ln,"class","icon icon-link"),i(V,"aria-hidden","true"),i(V,"tabindex","-1"),i(V,"href","#run-a-deno-app"),i(F,"id","run-a-deno-app"),i(us,"class","language-bash"),i(ks,"class","language-bash"),i(ds,"class","language-bash"),i(fs,"href","https://deno.land/std/examples/welcome.ts"),i(fs,"rel","nofollow"),i(ys,"href","https://deno.land/std/examples/"),i(ys,"rel","nofollow"),i(dn,"class","icon icon-link"),i(X,"aria-hidden","true"),i(X,"tabindex","-1"),i(X,"href","#lets-build-a-simple-rest-api"),i(z,"id","lets-build-a-simple-rest-api"),i(hs,"href","https://oakserver.github.io/oak/"),i(hs,"rel","nofollow"),i(vs,"href","https://deno.land/x/oak/mod.ts"),i(vs,"rel","nofollow"),i(bs,"class","language-javascript"),i(Es,"class","language-typescript"),i(_s,"href","https://deno.land/x/oak/mod.ts"),i(_s,"rel","nofollow"),i(ws,"class","language-javascript"),i(Ds,"class","language-javascript"),i(Ts,"class","language-javascript"),O(ua.src,Gp="/blog/images/simple-rest-api-with-deno/getBooks.png")||i(ua,"src",Gp),i(ua,"alt","getBooks"),i(Ps,"class","language-javascript"),O(fa.src,Yp="/blog/images/simple-rest-api-with-deno/getBook.png")||i(fa,"src",Yp),i(fa,"alt","getBook"),i(Bs,"class","language-javascript"),O(ha.src,Kp="/blog/images/simple-rest-api-with-deno/addBook.png")||i(ha,"src",Kp),i(ha,"alt","addBook"),O(ba.src,Fp="/blog/images/simple-rest-api-with-deno/afterAddBook.png")||i(ba,"src",Fp),i(ba,"alt","afterAddBook"),i(Rs,"class","language-js"),O(wa.src,Vp="/blog/images/simple-rest-api-with-deno/updateBook.png")||i(wa,"src",Vp),i(wa,"alt","updateBook"),O(Ta.src,$p="/blog/images/simple-rest-api-with-deno/afterUpdateBook.png")||i(Ta,"src",$p),i(Ta,"alt","afterUpdateBook"),i(xs,"class","language-javascript"),O(Ra.src,Qp="/blog/images/simple-rest-api-with-deno/deleteBook.png")||i(Ra,"src",Qp),i(Ra,"alt","deleteBook"),O(Aa.src,Zp="/blog/images/simple-rest-api-with-deno/afterDeleteBook.png")||i(Aa,"src",Zp),i(Aa,"alt","afterDeleteBook"),i(As,"href","https://github.com/AM-77/deno-rest-api"),i(As,"rel","nofollow"),i(Pn,"class","icon icon-link"),i(ts,"aria-hidden","true"),i(ts,"tabindex","-1"),i(ts,"href","#you-want-more-of-deno-"),i(ns,"id","you-want-more-of-deno-"),i(Ss,"href","https://deno.land"),i(Ss,"rel","nofollow"),i(gs,"href","https://doc.deno.land"),i(gs,"rel","nofollow"),i(Ls,"href","https://github.com/denolib/awesome-deno"),i(Ls,"rel","nofollow")},m(s,p){l(s,E,p),n(E,j),n(j,Ua),n(E,Vt),l(s,Rn,p),l(s,T,p),l(s,xn,p),l(s,Is,p),n(Is,$t),l(s,An,p),l(s,I,p),n(I,H),n(H,Wa),n(I,Qt),l(s,Sn,p),l(s,Hs,p),n(Hs,Ns),n(Ns,Zt),n(Ns,os),n(os,zt),l(s,gn,p),l(s,N,p),n(N,Xt),n(N,ps),n(ps,se),n(N,ae),l(s,Ln,p),l(s,C,p),n(C,M),n(M,Ga),n(C,ne),l(s,On,p),l(s,Cs,p),n(Cs,te),l(s,jn,p),l(s,J,p),n(J,Ya),n(Ya,P),n(P,In),n(P,ee),n(P,Ms),n(Ms,oe),n(P,pe),n(P,Js),n(Js,le),n(J,re),n(J,f),n(f,B),n(B,Ka),n(Ka,ce),n(B,ie),n(B,qs),n(qs,ue),n(B,ke),n(B,Us),n(Us,de),n(f,fe),n(f,R),n(R,Fa),n(Fa,me),n(R,ye),n(R,Ws),n(Ws,he),n(R,ve),n(R,Gs),n(Gs,be),n(f,Ee),n(f,x),n(x,Va),n(Va,_e),n(x,we),n(x,Ys),n(Ys,De),n(x,Te),n(x,Ks),n(Ks,Pe),n(f,Be),n(f,A),n(A,$a),n($a,Re),n(A,xe),n(A,Fs),n(Fs,Ae),n(A,Se),n(A,Vs),n(Vs,ge),n(f,Le),n(f,S),n(S,Qa),n(Qa,Oe),n(S,je),n(S,$s),n($s,Ie),n(S,He),n(S,Qs),n(Qs,Ne),n(f,Ce),n(f,g),n(g,Za),n(Za,Me),n(g,Je),n(g,Zs),n(Zs,qe),n(g,Ue),n(g,zs),n(zs,We),l(s,Hn,p),l(s,q,p),n(q,U),n(U,za),n(q,Ge),l(s,Nn,p),l(s,Xs,p),n(Xs,Ye),l(s,Cn,p),l(s,W,p),n(W,G),n(G,Xa),n(W,Ke),l(s,Mn,p),l(s,sa,p),n(sa,Fe),l(s,Jn,p),l(s,ls,p),ls.innerHTML=jr,l(s,qn,p),l(s,aa,p),n(aa,na),n(na,Ve),n(na,rs),n(rs,$e),l(s,Un,p),l(s,Y,p),n(Y,Qe),n(Y,sn),n(sn,Ze),n(Y,ze),l(s,Wn,p),l(s,v,p),n(v,Xe),n(v,an),n(an,so),n(v,ao),n(v,nn),n(nn,no),n(v,to),n(v,tn),n(tn,eo),l(s,Gn,p),l(s,_,p),n(_,oo),n(_,en),n(en,po),n(_,lo),n(_,on),n(on,ro),n(_,co),l(s,Yn,p),l(s,cs,p),cs.innerHTML=Ir,l(s,Kn,p),l(s,K,p),n(K,io),n(K,pn),n(pn,uo),n(K,ko),l(s,Fn,p),l(s,ta,p),n(ta,ea),n(ea,fo),n(ea,is),n(is,mo),l(s,Vn,p),l(s,F,p),n(F,V),n(V,ln),n(F,yo),l(s,$n,p),l(s,$,p),n($,ho),n($,rn),n(rn,vo),n($,bo),l(s,Qn,p),l(s,w,p),n(w,Eo),n(w,cn),n(cn,_o),n(w,wo),n(w,un),n(un,Do),n(w,To),l(s,Zn,p),l(s,oa,p),n(oa,Po),l(s,zn,p),l(s,us,p),us.innerHTML=Hr,l(s,Xn,p),l(s,pa,p),n(pa,Bo),l(s,st,p),l(s,ks,p),ks.innerHTML=Nr,l(s,at,p),l(s,Q,p),n(Q,Ro),n(Q,kn),n(kn,xo),n(Q,Ao),l(s,nt,p),l(s,ds,p),ds.innerHTML=Cr,l(s,tt,p),l(s,Z,p),n(Z,So),n(Z,fs),n(fs,go),n(Z,Lo),l(s,et,p),l(s,la,p),n(la,ms),n(ms,Oo),n(ms,ys),n(ys,jo),n(ms,Io),l(s,ot,p),l(s,z,p),n(z,X),n(X,dn),n(z,Ho),l(s,pt,p),l(s,ss,p),n(ss,No),n(ss,hs),n(hs,Co),n(ss,Mo),l(s,lt,p),l(s,b,p),n(b,Jo),n(b,fn),n(fn,qo),n(b,Uo),n(b,mn),n(mn,Wo),n(b,Go),n(b,vs),n(vs,Yo),l(s,rt,p),l(s,bs,p),bs.innerHTML=Mr,l(s,ct,p),l(s,L,p),n(L,Ko),n(L,yn),n(yn,Fo),n(L,Vo),n(L,hn),n(hn,$o),l(s,it,p),l(s,Es,p),Es.innerHTML=Jr,l(s,ut,p),l(s,D,p),n(D,Qo),n(D,vn),n(vn,Zo),n(D,zo),n(D,_s),n(_s,Xo),n(D,sp),l(s,kt,p),l(s,ws,p),ws.innerHTML=qr,l(s,dt,p),l(s,d,p),n(d,ap),n(d,bn),n(bn,np),n(d,tp),n(d,En),n(En,ep),n(d,op),n(d,_n),n(_n,pp),n(d,lp),n(d,wn),n(wn,rp),n(d,cp),n(d,Dn),n(Dn,ip),n(d,up),l(s,ft,p),l(s,as,p),n(as,kp),n(as,Tn),n(Tn,dp),n(as,fp),l(s,mt,p),l(s,Ds,p),Ds.innerHTML=Ur,l(s,yt,p),l(s,ra,p),n(ra,mp),l(s,ht,p),l(s,ca,p),n(ca,yp),l(s,vt,p),l(s,Ts,p),Ts.innerHTML=Wr,l(s,bt,p),l(s,ia,p),n(ia,ua),l(s,Et,p),l(s,ka,p),n(ka,hp),l(s,_t,p),l(s,Ps,p),Ps.innerHTML=Gr,l(s,wt,p),l(s,da,p),n(da,fa),l(s,Dt,p),l(s,ma,p),n(ma,vp),l(s,Tt,p),l(s,Bs,p),Bs.innerHTML=Yr,l(s,Pt,p),l(s,ya,p),n(ya,ha),l(s,Bt,p),l(s,va,p),n(va,ba),l(s,Rt,p),l(s,Ea,p),n(Ea,bp),l(s,xt,p),l(s,Rs,p),Rs.innerHTML=Kr,l(s,At,p),l(s,_a,p),n(_a,wa),l(s,St,p),l(s,Da,p),n(Da,Ta),l(s,gt,p),l(s,Pa,p),n(Pa,Ep),l(s,Lt,p),l(s,xs,p),xs.innerHTML=Fr,l(s,Ot,p),l(s,Ba,p),n(Ba,Ra),l(s,jt,p),l(s,xa,p),n(xa,Aa),l(s,It,p),l(s,Sa,p),n(Sa,ga),n(ga,_p),n(ga,As),n(As,wp),l(s,Ht,p),l(s,ns,p),n(ns,ts),n(ts,Pn),n(ns,Dp),l(s,Nt,p),l(s,m,p),n(m,Tp),n(m,Ss),n(Ss,Pp),n(m,Bp),n(m,gs),n(gs,Rp),n(m,xp),n(m,Ls),n(Ls,Ap),n(m,Sp)},p:Up,i:Up,o:Up,d(s){s&&a(E),s&&a(Rn),s&&a(T),s&&a(xn),s&&a(Is),s&&a(An),s&&a(I),s&&a(Sn),s&&a(Hs),s&&a(gn),s&&a(N),s&&a(Ln),s&&a(C),s&&a(On),s&&a(Cs),s&&a(jn),s&&a(J),s&&a(Hn),s&&a(q),s&&a(Nn),s&&a(Xs),s&&a(Cn),s&&a(W),s&&a(Mn),s&&a(sa),s&&a(Jn),s&&a(ls),s&&a(qn),s&&a(aa),s&&a(Un),s&&a(Y),s&&a(Wn),s&&a(v),s&&a(Gn),s&&a(_),s&&a(Yn),s&&a(cs),s&&a(Kn),s&&a(K),s&&a(Fn),s&&a(ta),s&&a(Vn),s&&a(F),s&&a($n),s&&a($),s&&a(Qn),s&&a(w),s&&a(Zn),s&&a(oa),s&&a(zn),s&&a(us),s&&a(Xn),s&&a(pa),s&&a(st),s&&a(ks),s&&a(at),s&&a(Q),s&&a(nt),s&&a(ds),s&&a(tt),s&&a(Z),s&&a(et),s&&a(la),s&&a(ot),s&&a(z),s&&a(pt),s&&a(ss),s&&a(lt),s&&a(b),s&&a(rt),s&&a(bs),s&&a(ct),s&&a(L),s&&a(it),s&&a(Es),s&&a(ut),s&&a(D),s&&a(kt),s&&a(ws),s&&a(dt),s&&a(d),s&&a(ft),s&&a(as),s&&a(mt),s&&a(Ds),s&&a(yt),s&&a(ra),s&&a(ht),s&&a(ca),s&&a(vt),s&&a(Ts),s&&a(bt),s&&a(ia),s&&a(Et),s&&a(ka),s&&a(_t),s&&a(Ps),s&&a(wt),s&&a(da),s&&a(Dt),s&&a(ma),s&&a(Tt),s&&a(Bs),s&&a(Pt),s&&a(ya),s&&a(Bt),s&&a(va),s&&a(Rt),s&&a(Ea),s&&a(xt),s&&a(Rs),s&&a(At),s&&a(_a),s&&a(St),s&&a(Da),s&&a(gt),s&&a(Pa),s&&a(Lt),s&&a(xs),s&&a(Ot),s&&a(Ba),s&&a(jt),s&&a(xa),s&&a(It),s&&a(Sa),s&&a(Ht),s&&a(ns),s&&a(Nt),s&&a(m)}}}const dc={title:"Simple Rest API With Deno",date:"2020-05-14T22:36:07.174Z",description:"Let's build a Deno REST API",tags:"Deno,TypeScript"};class fc extends rc{constructor(E){super(),cc(this,E,null,uc,ic,{})}}export{fc as default,dc as metadata};
