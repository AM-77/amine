import{S as de,i as ve,s as we,k as n,r,a as w,l as o,m as i,h as t,u as p,c as m,p as c,b as l,E as s,n as ee}from"./index.fbbdd111.js";function me(he){let h,f,S,J,D,g,L,M,E,K,C,d,v,W,U,T,u,Y,A,z,B,H,G,Q,j,y,R,q,k,ue=`<code class="language-javascript">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"beforeunload"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> confirmationMessage <span class="token operator">=</span> <span class="token string">"\\o/"</span><span class="token punctuation">;</span>

  <span class="token comment">// Gecko + IE</span>
  <span class="token punctuation">(</span>e <span class="token operator">||</span> window<span class="token punctuation">.</span>event<span class="token punctuation">)</span><span class="token punctuation">.</span>returnValue <span class="token operator">=</span> confirmationMessage<span class="token punctuation">;</span>

  <span class="token comment">// Safari, Chrome, and other WebKit-derived browsers</span>
  <span class="token keyword">return</span> confirmationMessage<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,N,b,V,_,Z,O,P,I,F;return{c(){h=n("h2"),f=n("a"),S=n("span"),J=r("Why ?"),D=w(),g=n("p"),L=r("Imagine this scenario: You have a large form that the user needs to fill out. He starts filling out all the fields, then accidentally closes the page, or he forgets to save and navigates to another page. In this case, all his changes will be gone."),M=w(),E=n("p"),K=r("It would be great to somehow stop him from leaving the page and ask for his confirmation before clearing all the fields, and that’s exactly what we will cover in this post."),C=w(),d=n("h2"),v=n("a"),W=n("span"),U=r("How ?"),T=w(),u=n("p"),Y=r("To achieve that, we can use the "),A=n("code"),z=r("beforeunload"),B=r(" event. As the name indicates, the "),H=n("code"),G=r("beforeunload"),Q=r(" event gets fired just before the document or the window is unloaded, which gives the possibility to run some code before the unload asking for the user’s confirmation to prevent the closing or discarding his work."),j=w(),y=n("p"),R=r("the code"),q=w(),k=n("pre"),N=w(),b=n("p"),V=r("for more details please check the MDN Web Doc here "),_=n("a"),Z=r("Window: beforeunload event"),O=w(),P=n("blockquote"),I=n("p"),F=r("Please use this wisely; it is super annoying to prevent the user from navigating freely in the application."),this.h()},l(e){h=o(e,"H2",{id:!0});var a=i(h);f=o(a,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var te=i(f);S=o(te,"SPAN",{class:!0}),i(S).forEach(t),te.forEach(t),J=p(a,"Why ?"),a.forEach(t),D=m(e),g=o(e,"P",{});var ae=i(g);L=p(ae,"Imagine this scenario: You have a large form that the user needs to fill out. He starts filling out all the fields, then accidentally closes the page, or he forgets to save and navigates to another page. In this case, all his changes will be gone."),ae.forEach(t),M=m(e),E=o(e,"P",{});var se=i(E);K=p(se,"It would be great to somehow stop him from leaving the page and ask for his confirmation before clearing all the fields, and that’s exactly what we will cover in this post."),se.forEach(t),C=m(e),d=o(e,"H2",{id:!0});var X=i(d);v=o(X,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ne=i(v);W=o(ne,"SPAN",{class:!0}),i(W).forEach(t),ne.forEach(t),U=p(X,"How ?"),X.forEach(t),T=m(e),u=o(e,"P",{});var x=i(u);Y=p(x,"To achieve that, we can use the "),A=o(x,"CODE",{});var oe=i(A);z=p(oe,"beforeunload"),oe.forEach(t),B=p(x," event. As the name indicates, the "),H=o(x,"CODE",{});var ie=i(H);G=p(ie,"beforeunload"),ie.forEach(t),Q=p(x," event gets fired just before the document or the window is unloaded, which gives the possibility to run some code before the unload asking for the user’s confirmation to prevent the closing or discarding his work."),x.forEach(t),j=m(e),y=o(e,"P",{});var le=i(y);R=p(le,"the code"),le.forEach(t),q=m(e),k=o(e,"PRE",{class:!0});var fe=i(k);fe.forEach(t),N=m(e),b=o(e,"P",{});var $=i(b);V=p($,"for more details please check the MDN Web Doc here "),_=o($,"A",{href:!0,rel:!0});var re=i(_);Z=p(re,"Window: beforeunload event"),re.forEach(t),$.forEach(t),O=m(e),P=o(e,"BLOCKQUOTE",{});var pe=i(P);I=o(pe,"P",{});var ce=i(I);F=p(ce,"Please use this wisely; it is super annoying to prevent the user from navigating freely in the application."),ce.forEach(t),pe.forEach(t),this.h()},h(){c(S,"class","icon icon-link"),c(f,"aria-hidden","true"),c(f,"tabindex","-1"),c(f,"href","#why-"),c(h,"id","why-"),c(W,"class","icon icon-link"),c(v,"aria-hidden","true"),c(v,"tabindex","-1"),c(v,"href","#how-"),c(d,"id","how-"),c(k,"class","language-javascript"),c(_,"href","https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event"),c(_,"rel","nofollow")},m(e,a){l(e,h,a),s(h,f),s(f,S),s(h,J),l(e,D,a),l(e,g,a),s(g,L),l(e,M,a),l(e,E,a),s(E,K),l(e,C,a),l(e,d,a),s(d,v),s(v,W),s(d,U),l(e,T,a),l(e,u,a),s(u,Y),s(u,A),s(A,z),s(u,B),s(u,H),s(H,G),s(u,Q),l(e,j,a),l(e,y,a),s(y,R),l(e,q,a),l(e,k,a),k.innerHTML=ue,l(e,N,a),l(e,b,a),s(b,V),s(b,_),s(_,Z),l(e,O,a),l(e,P,a),s(P,I),s(I,F)},p:ee,i:ee,o:ee,d(e){e&&t(h),e&&t(D),e&&t(g),e&&t(M),e&&t(E),e&&t(C),e&&t(d),e&&t(T),e&&t(u),e&&t(j),e&&t(y),e&&t(q),e&&t(k),e&&t(N),e&&t(b),e&&t(O),e&&t(P)}}}const be={title:"Detect and prevent tab or window closing with JavaScript",date:"2023-06-21T13:50:13.284Z",description:"How to detect and prevent the user from closing the tab or the window using JavaScript",tags:"JavaScript"};class _e extends de{constructor(h){super(),ve(this,h,null,me,we,{})}}export{_e as default,be as metadata};
