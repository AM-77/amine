import{S as Xa,i as $a,s as ga,k as t,r as p,a as f,l as e,m as o,h as a,u as c,c as N,p as i,b as u,E as n,n as da}from"./index.fbbdd111.js";function sn(Za){let m,_,U,Cs,z,Ds,us,v,B,xs,Ps,L,Ss,As,is,b,w,Y,Ws,I,js,rs,h,Ts,K,Hs,Js,M,Rs,qs,ks,E,O,Q,Gs,Z,Us,fs,d,zs,F,Bs,Ls,V,Ys,Is,X,Ks,Ns,y,C,$,Ms,ms,r,Qs,g,Zs,Fs,ss,Vs,Xs,as,$s,gs,ns,sa,aa,ts,na,ta,es,ea,oa,ds,j,pa,hs,x,Fa=`<code class="language-javascript">
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true // it trys to convert "test" to a number returns NaN then check if the converted value is NaN</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false  // check directly if the converted value is NaN</span>

<span class="token comment">// value is NaN</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token comment">// value is undefined</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

<span class="token comment">// value is null</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false // is coerced to 0</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

<span class="token comment">// value is a boolean</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false // is coerced to 1</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

<span class="token comment">// value is a boolean</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false // is coerced to 0</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

<span class="token comment">// value is an object</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

<span class="token comment">// value is a number</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">37</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">37</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

<span class="token comment">// value is a date</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false // coerced to a number (timestamp)</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

<span class="token comment">// value is "NaN"</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">"NaN"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true // coerced to NaN</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">"NaN"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

<span class="token comment">// value is empty string</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false // coerced to 0</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

<span class="token comment">// value is empty array</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false // coerced to 0</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code>`,vs,T,D,os,ca,la,ps,ua,ia,bs,H,ra,Es,J,P,ka,_s,R,S,fa,ws,q,A,Na;return{c(){m=t("h2"),_=t("a"),U=t("span"),Cs=p("What is the global "),z=t("code"),Ds=p("NaN"),us=f(),v=t("p"),B=t("code"),xs=p("NaN"),Ps=p(" is a property of the "),L=t("strong"),Ss=p("global object"),As=p(" that represents a Not-A-Number."),is=f(),b=t("h2"),w=t("a"),Y=t("span"),Ws=p("What is "),I=t("code"),js=p("isNaN(value)"),rs=f(),h=t("p"),Ts=p("a function that checks if "),K=t("code"),Hs=p("value"),Js=p(" is "),M=t("code"),Rs=p("NaN"),qs=p(" after trying converting it to a number."),ks=f(),E=t("h2"),O=t("a"),Q=t("span"),Gs=p("What is "),Z=t("code"),Us=p("Number.isNaN(value)"),fs=f(),d=t("p"),zs=p("a static method of the "),F=t("code"),Bs=p("Number"),Ls=p(" class determines whether the passed "),V=t("code"),Ys=p("value"),Is=p(" is the number value "),X=t("code"),Ks=p("NaN"),Ns=f(),y=t("h2"),C=t("a"),$=t("span"),Ms=p("The difference"),ms=f(),r=t("p"),Qs=p("the main difference is that "),g=t("code"),Zs=p("isNaN"),Fs=p(" try to converts the passed "),ss=t("code"),Vs=p("value"),Xs=p(" to a number then checks if it is "),as=t("code"),$s=p("NaN"),gs=p(", while the "),ns=t("code"),sa=p("Number.isNaN()"),aa=p(" check the passed "),ts=t("code"),na=p("value"),ta=p(" as it is, so non-numbers always return "),es=t("code"),ea=p("false"),oa=p("."),ds=f(),j=t("p"),pa=p("examples:"),hs=f(),x=t("pre"),vs=f(),T=t("blockquote"),D=t("p"),os=t("code"),ca=p("Number.isNaN"),la=p(" is a more safe and robust version of "),ps=t("code"),ua=p("isNaN"),ia=p("."),bs=f(),H=t("p"),ra=p("You can find more details:"),Es=f(),J=t("p"),P=t("a"),ka=p("NaN"),_s=f(),R=t("p"),S=t("a"),fa=p("isNaN()"),ws=f(),q=t("p"),A=t("a"),Na=p("Number.isNaN()"),this.h()},l(s){m=e(s,"H2",{id:!0});var l=o(m);_=e(l,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ha=o(_);U=e(ha,"SPAN",{class:!0}),o(U).forEach(a),ha.forEach(a),Cs=c(l,"What is the global "),z=e(l,"CODE",{});var va=o(z);Ds=c(va,"NaN"),va.forEach(a),l.forEach(a),us=N(s),v=e(s,"P",{});var cs=o(v);B=e(cs,"CODE",{});var ba=o(B);xs=c(ba,"NaN"),ba.forEach(a),Ps=c(cs," is a property of the "),L=e(cs,"STRONG",{});var Ea=o(L);Ss=c(Ea,"global object"),Ea.forEach(a),As=c(cs," that represents a Not-A-Number."),cs.forEach(a),is=N(s),b=e(s,"H2",{id:!0});var Os=o(b);w=e(Os,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var _a=o(w);Y=e(_a,"SPAN",{class:!0}),o(Y).forEach(a),_a.forEach(a),Ws=c(Os,"What is "),I=e(Os,"CODE",{});var wa=o(I);js=c(wa,"isNaN(value)"),wa.forEach(a),Os.forEach(a),rs=N(s),h=e(s,"P",{});var G=o(h);Ts=c(G,"a function that checks if "),K=e(G,"CODE",{});var Oa=o(K);Hs=c(Oa,"value"),Oa.forEach(a),Js=c(G," is "),M=e(G,"CODE",{});var ya=o(M);Rs=c(ya,"NaN"),ya.forEach(a),qs=c(G," after trying converting it to a number."),G.forEach(a),ks=N(s),E=e(s,"H2",{id:!0});var ys=o(E);O=e(ys,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Ca=o(O);Q=e(Ca,"SPAN",{class:!0}),o(Q).forEach(a),Ca.forEach(a),Gs=c(ys,"What is "),Z=e(ys,"CODE",{});var Da=o(Z);Us=c(Da,"Number.isNaN(value)"),Da.forEach(a),ys.forEach(a),fs=N(s),d=e(s,"P",{});var W=o(d);zs=c(W,"a static method of the "),F=e(W,"CODE",{});var xa=o(F);Bs=c(xa,"Number"),xa.forEach(a),Ls=c(W," class determines whether the passed "),V=e(W,"CODE",{});var Pa=o(V);Ys=c(Pa,"value"),Pa.forEach(a),Is=c(W," is the number value "),X=e(W,"CODE",{});var Sa=o(X);Ks=c(Sa,"NaN"),Sa.forEach(a),W.forEach(a),Ns=N(s),y=e(s,"H2",{id:!0});var ma=o(y);C=e(ma,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Aa=o(C);$=e(Aa,"SPAN",{class:!0}),o($).forEach(a),Aa.forEach(a),Ms=c(ma,"The difference"),ma.forEach(a),ms=N(s),r=e(s,"P",{});var k=o(r);Qs=c(k,"the main difference is that "),g=e(k,"CODE",{});var Wa=o(g);Zs=c(Wa,"isNaN"),Wa.forEach(a),Fs=c(k," try to converts the passed "),ss=e(k,"CODE",{});var ja=o(ss);Vs=c(ja,"value"),ja.forEach(a),Xs=c(k," to a number then checks if it is "),as=e(k,"CODE",{});var Ta=o(as);$s=c(Ta,"NaN"),Ta.forEach(a),gs=c(k,", while the "),ns=e(k,"CODE",{});var Ha=o(ns);sa=c(Ha,"Number.isNaN()"),Ha.forEach(a),aa=c(k," check the passed "),ts=e(k,"CODE",{});var Ja=o(ts);na=c(Ja,"value"),Ja.forEach(a),ta=c(k," as it is, so non-numbers always return "),es=e(k,"CODE",{});var Ra=o(es);ea=c(Ra,"false"),Ra.forEach(a),oa=c(k,"."),k.forEach(a),ds=N(s),j=e(s,"P",{});var qa=o(j);pa=c(qa,"examples:"),qa.forEach(a),hs=N(s),x=e(s,"PRE",{class:!0});var Va=o(x);Va.forEach(a),vs=N(s),T=e(s,"BLOCKQUOTE",{});var Ga=o(T);D=e(Ga,"P",{});var ls=o(D);os=e(ls,"CODE",{});var Ua=o(os);ca=c(Ua,"Number.isNaN"),Ua.forEach(a),la=c(ls," is a more safe and robust version of "),ps=e(ls,"CODE",{});var za=o(ps);ua=c(za,"isNaN"),za.forEach(a),ia=c(ls,"."),ls.forEach(a),Ga.forEach(a),bs=N(s),H=e(s,"P",{});var Ba=o(H);ra=c(Ba,"You can find more details:"),Ba.forEach(a),Es=N(s),J=e(s,"P",{});var La=o(J);P=e(La,"A",{href:!0,rel:!0});var Ya=o(P);ka=c(Ya,"NaN"),Ya.forEach(a),La.forEach(a),_s=N(s),R=e(s,"P",{});var Ia=o(R);S=e(Ia,"A",{href:!0,rel:!0});var Ka=o(S);fa=c(Ka,"isNaN()"),Ka.forEach(a),Ia.forEach(a),ws=N(s),q=e(s,"P",{});var Ma=o(q);A=e(Ma,"A",{href:!0,rel:!0});var Qa=o(A);Na=c(Qa,"Number.isNaN()"),Qa.forEach(a),Ma.forEach(a),this.h()},h(){i(U,"class","icon icon-link"),i(_,"aria-hidden","true"),i(_,"tabindex","-1"),i(_,"href","#what-is-the-global-nan"),i(m,"id","what-is-the-global-nan"),i(Y,"class","icon icon-link"),i(w,"aria-hidden","true"),i(w,"tabindex","-1"),i(w,"href","#what-is-isnanvalue"),i(b,"id","what-is-isnanvalue"),i(Q,"class","icon icon-link"),i(O,"aria-hidden","true"),i(O,"tabindex","-1"),i(O,"href","#what-is-numberisnanvalue"),i(E,"id","what-is-numberisnanvalue"),i($,"class","icon icon-link"),i(C,"aria-hidden","true"),i(C,"tabindex","-1"),i(C,"href","#the-difference"),i(y,"id","the-difference"),i(x,"class","language-javascript"),i(P,"href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN"),i(P,"rel","nofollow"),i(S,"href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN"),i(S,"rel","nofollow"),i(A,"href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN"),i(A,"rel","nofollow")},m(s,l){u(s,m,l),n(m,_),n(_,U),n(m,Cs),n(m,z),n(z,Ds),u(s,us,l),u(s,v,l),n(v,B),n(B,xs),n(v,Ps),n(v,L),n(L,Ss),n(v,As),u(s,is,l),u(s,b,l),n(b,w),n(w,Y),n(b,Ws),n(b,I),n(I,js),u(s,rs,l),u(s,h,l),n(h,Ts),n(h,K),n(K,Hs),n(h,Js),n(h,M),n(M,Rs),n(h,qs),u(s,ks,l),u(s,E,l),n(E,O),n(O,Q),n(E,Gs),n(E,Z),n(Z,Us),u(s,fs,l),u(s,d,l),n(d,zs),n(d,F),n(F,Bs),n(d,Ls),n(d,V),n(V,Ys),n(d,Is),n(d,X),n(X,Ks),u(s,Ns,l),u(s,y,l),n(y,C),n(C,$),n(y,Ms),u(s,ms,l),u(s,r,l),n(r,Qs),n(r,g),n(g,Zs),n(r,Fs),n(r,ss),n(ss,Vs),n(r,Xs),n(r,as),n(as,$s),n(r,gs),n(r,ns),n(ns,sa),n(r,aa),n(r,ts),n(ts,na),n(r,ta),n(r,es),n(es,ea),n(r,oa),u(s,ds,l),u(s,j,l),n(j,pa),u(s,hs,l),u(s,x,l),x.innerHTML=Fa,u(s,vs,l),u(s,T,l),n(T,D),n(D,os),n(os,ca),n(D,la),n(D,ps),n(ps,ua),n(D,ia),u(s,bs,l),u(s,H,l),n(H,ra),u(s,Es,l),u(s,J,l),n(J,P),n(P,ka),u(s,_s,l),u(s,R,l),n(R,S),n(S,fa),u(s,ws,l),u(s,q,l),n(q,A),n(A,Na)},p:da,i:da,o:da,d(s){s&&a(m),s&&a(us),s&&a(v),s&&a(is),s&&a(b),s&&a(rs),s&&a(h),s&&a(ks),s&&a(E),s&&a(fs),s&&a(d),s&&a(Ns),s&&a(y),s&&a(ms),s&&a(r),s&&a(ds),s&&a(j),s&&a(hs),s&&a(x),s&&a(vs),s&&a(T),s&&a(bs),s&&a(H),s&&a(Es),s&&a(J),s&&a(_s),s&&a(R),s&&a(ws),s&&a(q)}}}const nn={title:"isNaN() vs Number.isNaN() in JavaScript",date:"2024-01-07T14:24:13.284Z",description:"What is the difference Between isNaN() and Number.isNaN()?",tags:"JavaScript"};class tn extends Xa{constructor(m){super(),$a(this,m,null,sn,ga,{})}}export{tn as default,nn as metadata};
