import{S as rs,i as us,s as is,k as p,r as u,a as y,l as o,m as c,h as n,u as i,c as m,p as l,b as t,E as e,n as W}from"./index.fbbdd111.js";function ks(as){let r,k,P,O,C,d,U,R,Z,z,H,v,ts=`<code class="language-javascript"><span class="token string">'use client'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> useSearchParams<span class="token punctuation">,</span> usePathname<span class="token punctuation">,</span> useRouter <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'next/navigation'</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">MyComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">const</span> searchParams <span class="token operator">=</span> <span class="token function">useSearchParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> pathname <span class="token operator">=</span> <span class="token function">usePathname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">url</span><span class="token operator">:</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token operator">&lt;</span>p<span class="token operator">></span>Client Side<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> MyComponent<span class="token punctuation">;</span></code>`,L,f,h,j,B,M,E,F,N,w,G,b,I,K,A,_,es=`<code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> NextResponse <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'next/server'</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">middleware</span><span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">const</span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Headers</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span>
	headers<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'x-url'</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> NextResponse<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> headers <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,q,S,Q,T,x,ps=`<code class="language-javascript"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> headers <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'next/headers'</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">MyComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">const</span> headersList <span class="token operator">=</span> <span class="token function">headers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> xurl <span class="token operator">=</span> headersList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'x-url'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token operator">&lt;</span>p<span class="token operator">></span>Server Side<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> MyComponent<span class="token punctuation">;</span></code>`;return{c(){r=p("h2"),k=p("a"),P=p("span"),O=u("Client Side"),C=y(),d=p("p"),U=u("this is strightforward, you can just access the "),R=p("code"),Z=u("window.location.href"),z=u(" or using the hooks"),H=y(),v=p("pre"),L=y(),f=p("h2"),h=p("a"),j=p("span"),B=u("Server Side"),M=y(),E=p("p"),F=u("for the server side is a bit tickier, as there is no strightforward way to access the url, instead you need to set the url into the headers, than you retieve it from the headers when you want to use it."),N=y(),w=p("p"),G=u("in the "),b=p("code"),I=u("middleware.js"),K=u(", you set the url to the headers"),A=y(),_=p("pre"),q=y(),S=p("p"),Q=u("in the component:"),T=y(),x=p("pre"),this.h()},l(s){r=o(s,"H2",{id:!0});var a=c(r);k=o(a,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var X=c(k);P=o(X,"SPAN",{class:!0}),c(P).forEach(n),X.forEach(n),O=i(a,"Client Side"),a.forEach(n),C=m(s),d=o(s,"P",{});var J=c(d);U=i(J,"this is strightforward, you can just access the "),R=o(J,"CODE",{});var Y=c(R);Z=i(Y,"window.location.href"),Y.forEach(n),z=i(J," or using the hooks"),J.forEach(n),H=m(s),v=o(s,"PRE",{class:!0});var os=c(v);os.forEach(n),L=m(s),f=o(s,"H2",{id:!0});var V=c(f);h=o(V,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var $=c(h);j=o($,"SPAN",{class:!0}),c(j).forEach(n),$.forEach(n),B=i(V,"Server Side"),V.forEach(n),M=m(s),E=o(s,"P",{});var g=c(E);F=i(g,"for the server side is a bit tickier, as there is no strightforward way to access the url, instead you need to set the url into the headers, than you retieve it from the headers when you want to use it."),g.forEach(n),N=m(s),w=o(s,"P",{});var D=c(w);G=i(D,"in the "),b=o(D,"CODE",{});var ss=c(b);I=i(ss,"middleware.js"),ss.forEach(n),K=i(D,", you set the url to the headers"),D.forEach(n),A=m(s),_=o(s,"PRE",{class:!0});var cs=c(_);cs.forEach(n),q=m(s),S=o(s,"P",{});var ns=c(S);Q=i(ns,"in the component:"),ns.forEach(n),T=m(s),x=o(s,"PRE",{class:!0});var ls=c(x);ls.forEach(n),this.h()},h(){l(P,"class","icon icon-link"),l(k,"aria-hidden","true"),l(k,"tabindex","-1"),l(k,"href","#client-side"),l(r,"id","client-side"),l(v,"class","language-javascript"),l(j,"class","icon icon-link"),l(h,"aria-hidden","true"),l(h,"tabindex","-1"),l(h,"href","#server-side"),l(f,"id","server-side"),l(_,"class","language-javascript"),l(x,"class","language-javascript")},m(s,a){t(s,r,a),e(r,k),e(k,P),e(r,O),t(s,C,a),t(s,d,a),e(d,U),e(d,R),e(R,Z),e(d,z),t(s,H,a),t(s,v,a),v.innerHTML=ts,t(s,L,a),t(s,f,a),e(f,h),e(h,j),e(f,B),t(s,M,a),t(s,E,a),e(E,F),t(s,N,a),t(s,w,a),e(w,G),e(w,b),e(b,I),e(w,K),t(s,A,a),t(s,_,a),_.innerHTML=es,t(s,q,a),t(s,S,a),e(S,Q),t(s,T,a),t(s,x,a),x.innerHTML=ps},p:W,i:W,o:W,d(s){s&&n(r),s&&n(C),s&&n(d),s&&n(H),s&&n(v),s&&n(L),s&&n(f),s&&n(M),s&&n(E),s&&n(N),s&&n(w),s&&n(A),s&&n(_),s&&n(q),s&&n(S),s&&n(T),s&&n(x)}}}const fs={title:"Access the URL in NextJS 13",date:"2024-01-10T22:02:22.284Z",description:"How to access the URL in NextJS 13, in both client side and server side",tags:"NextJS"};class hs extends rs{constructor(r){super(),us(this,r,null,ks,is,{})}}export{hs as default,fs as metadata};
