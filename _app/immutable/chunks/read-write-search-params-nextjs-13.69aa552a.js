import{S as da,i as fa,s as ma,k as p,r as b,a as u,l as o,m as e,h as s,u as E,c as k,p as c,b as t,E as l,n as G}from"./index.fbbdd111.js";function ya(pa){let r,i,x,$,j,h,L,q,H,m,oa=`<code class="language-javascript"><span class="token string">'use client'</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> useSearchParams <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'next/navigation'</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">MyComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">const</span> searchParams <span class="token operator">=</span> <span class="token function">useSearchParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">const</span> a <span class="token operator">=</span> searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> b <span class="token operator">=</span> searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token punctuation">(</span>
		<span class="token operator">&lt;</span><span class="token operator">></span>
			Search Params<span class="token operator">:</span> a<span class="token operator">:</span> <span class="token punctuation">&#123;</span>a<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>b<span class="token punctuation">&#125;</span>
		<span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,N,_,R,Z,T,y,ea=`<code class="language-javascript"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">MyPage</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">const</span> <span class="token punctuation">&#123;</span>
		<span class="token literal-property property">searchParams</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> a<span class="token punctuation">,</span> b <span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token punctuation">(</span>
		<span class="token operator">&lt;</span><span class="token operator">></span>
			Search Params<span class="token operator">:</span> a<span class="token operator">:</span> <span class="token punctuation">&#123;</span>a<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>b<span class="token punctuation">&#125;</span>
		<span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> MyPage<span class="token punctuation">;</span></code>`,U,d,f,C,z,A,P,M,B,I,w,ca=`<code class="language-javascript"><span class="token string">'use client'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> useSearchParams<span class="token punctuation">,</span> usePathname<span class="token punctuation">,</span> useRouter <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'next/navigation'</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">MyComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">const</span> searchParams <span class="token operator">=</span> <span class="token function">useSearchParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> pathname <span class="token operator">=</span> <span class="token function">usePathname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">const</span> <span class="token function-variable function">onClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span>searchParams<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		params<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'a_value'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		params<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'b_value'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>pathname<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>params<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span>onClick<span class="token punctuation">&#125;</span><span class="token operator">></span>Click Here<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> MyComponent<span class="token punctuation">;</span></code>`,J,S,g,D,W,v,la=`<code class="language-javascript"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> Link <span class="token keyword">from</span> <span class="token string">'next/link'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">MyPage</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> <span class="token operator">&lt;</span>Link href<span class="token operator">=</span><span class="token string">"/?a=a_value&amp;b=b_value"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> MyPage<span class="token punctuation">;</span></code>`;return{c(){r=p("h2"),i=p("a"),x=p("span"),$=b("Read searchParams"),j=u(),h=p("ul"),L=p("li"),q=b("Client Side"),H=u(),m=p("pre"),N=u(),_=p("ul"),R=p("li"),Z=b("Server Side"),T=u(),y=p("pre"),U=u(),d=p("h2"),f=p("a"),C=p("span"),z=b("Write searchParams"),A=u(),P=p("ul"),M=p("li"),B=b("Client Side"),I=u(),w=p("pre"),J=u(),S=p("ul"),g=p("li"),D=b("Server Side"),W=u(),v=p("pre"),this.h()},l(a){r=o(a,"H2",{id:!0});var n=e(r);i=o(n,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var K=e(i);x=o(K,"SPAN",{class:!0}),e(x).forEach(s),K.forEach(s),$=E(n,"Read searchParams"),n.forEach(s),j=k(a),h=o(a,"UL",{});var O=e(h);L=o(O,"LI",{});var Q=e(L);q=E(Q,"Client Side"),Q.forEach(s),O.forEach(s),H=k(a),m=o(a,"PRE",{class:!0});var ra=e(m);ra.forEach(s),N=k(a),_=o(a,"UL",{});var V=e(_);R=o(V,"LI",{});var X=e(R);Z=E(X,"Server Side"),X.forEach(s),V.forEach(s),T=k(a),y=o(a,"PRE",{class:!0});var ua=e(y);ua.forEach(s),U=k(a),d=o(a,"H2",{id:!0});var F=e(d);f=o(F,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Y=e(f);C=o(Y,"SPAN",{class:!0}),e(C).forEach(s),Y.forEach(s),z=E(F,"Write searchParams"),F.forEach(s),A=k(a),P=o(a,"UL",{});var aa=e(P);M=o(aa,"LI",{});var sa=e(M);B=E(sa,"Client Side"),sa.forEach(s),aa.forEach(s),I=k(a),w=o(a,"PRE",{class:!0});var ka=e(w);ka.forEach(s),J=k(a),S=o(a,"UL",{});var na=e(S);g=o(na,"LI",{});var ta=e(g);D=E(ta,"Server Side"),ta.forEach(s),na.forEach(s),W=k(a),v=o(a,"PRE",{class:!0});var ia=e(v);ia.forEach(s),this.h()},h(){c(x,"class","icon icon-link"),c(i,"aria-hidden","true"),c(i,"tabindex","-1"),c(i,"href","#read-searchparams"),c(r,"id","read-searchparams"),c(m,"class","language-javascript"),c(y,"class","language-javascript"),c(C,"class","icon icon-link"),c(f,"aria-hidden","true"),c(f,"tabindex","-1"),c(f,"href","#write-searchparams"),c(d,"id","write-searchparams"),c(w,"class","language-javascript"),c(v,"class","language-javascript")},m(a,n){t(a,r,n),l(r,i),l(i,x),l(r,$),t(a,j,n),t(a,h,n),l(h,L),l(L,q),t(a,H,n),t(a,m,n),m.innerHTML=oa,t(a,N,n),t(a,_,n),l(_,R),l(R,Z),t(a,T,n),t(a,y,n),y.innerHTML=ea,t(a,U,n),t(a,d,n),l(d,f),l(f,C),l(d,z),t(a,A,n),t(a,P,n),l(P,M),l(M,B),t(a,I,n),t(a,w,n),w.innerHTML=ca,t(a,J,n),t(a,S,n),l(S,g),l(g,D),t(a,W,n),t(a,v,n),v.innerHTML=la},p:G,i:G,o:G,d(a){a&&s(r),a&&s(j),a&&s(h),a&&s(H),a&&s(m),a&&s(N),a&&s(_),a&&s(T),a&&s(y),a&&s(U),a&&s(d),a&&s(A),a&&s(P),a&&s(I),a&&s(w),a&&s(J),a&&s(S),a&&s(W),a&&s(v)}}}const va={title:"Read and write searchParams in NextJS 13",date:"2024-01-10T22:02:22.284Z",description:"How to read and write searchParams in NextJS 13, in both client side and server side",tags:"NextJS"};class ha extends da{constructor(r){super(),fa(this,r,null,ya,ma,{})}}export{ha as default,va as metadata};
